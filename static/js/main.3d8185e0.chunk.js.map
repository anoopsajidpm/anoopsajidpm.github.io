{"version":3,"sources":["modules/SurahInfo/SurahInfo.js","components/Listview/Listview.js","components/Loader/Loader.js","App.js","serviceWorker.js","index.js"],"names":["filteredLangs","defaultTrans","undefined","LangPopup","props","selectedTrans","selectLangClass","trans_conf","length","filter","item","active","react_default","a","createElement","className","translations","nativeName","onChange","evt","lng","target","value","temp","code","name","selectLang","id","onClick","map","key","SurahInfo","navBack","onNavBack","selectedSurah","navNext","onNavNext","navNextClass","navBackClass","refreshData","inputVal","nextBtnText","backBtnClass","backBtnText","englishName","englishNameTranslation","details","ayahNumber","data-value","number","SurahInfo_LangPopup","processData","selectTrans","getLangName","lang","Langs","Listview","results","List_default","component","disablePadding","dense","index","ListItem_default","ListItemText_default","edition","type","language","audio","controls","src","text","Loader","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectSurah","dataVal","getAttribute","setState","preloader","fetchSurahDetails","Number","findLang","array","title","result","navigateAyah","data","valNow","state","totAyahs","numberOfAyahs","navBtnClass","back","next","selSurahNumber","String","searchForAyah","mainResult","ayahDetails","rawData","surahList","searchError","searchBlockClass","q_edition_ar","q_edition_trans","q_edition_audio","searchBtnClass","url_search","total_ayahs","handleLoad","bind","assertThisInitialized","resetView","selectTranslation","window","location","search","_this2","addEventListener","_this3","Surahs","getTotalAyahCount","url_origin","origin","extractSearchStrings","checkForSearchString","surahs","totalAyah","sur","_this4","search_string","console","log","split","url_param","valid","url_string","str_split","replace","str","res","parts","push","_this5","isValid","event","_this6","q_editions","isRefValid","validateInput","url","options","cacheKey","cached","sessionStorage","getItem","response","Response","Blob","Promise","resolve","fetch","then","ct","headers","get","match","clone","content","setItem","cachedFetch","json","surah","numberInSurah","catch","trans","_this7","_this8","filteredItem","flag","assign","hizbQuarter","juz","manzil","page","ruku","sajda","searchBtn","_this9","keyCode","_this10","selSurah","ayahInput","focus","listview","_this11","components_Listview_Listview","SurahInfo_SurahInfo","totalAyahs","closeBubble","hidden","reactjs_popup_es","trigger","on","position","modal","closeOnDocumentClick","onRequestClose","modalIsOpen","ref","surahLabel","updateInputVal","onKeyDown","verifyInputKey","placeholder","input","pattern","min","max","components_Loader_Loader","React","Component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d8185e0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport Langs from '../../assets/json/langs.json';\r\nimport trans_conf from '../../assets/json/lang_config.json';\r\n//import Popup from \"reactjs-popup\";\r\n\r\nvar chkTrans = {}; // = {'english': false, 'malayalam' : false};\r\n\r\nlet filteredLangs ; //Langs.filter(item => item.code === 'en' || item.code === 'ml' );\r\nlet defaultTrans = undefined;\r\nlet popupStatus = false ;\r\n\r\n\r\nlet filteredTrans = () => {\r\n    let res = [];\r\n    \r\n    let test = {};\r\n    console.log(trans_conf);\r\n    trans_conf.map(lng => {\r\n        let temp = Langs.filter(item => item.code === lng.code)[0];\r\n        res.push(temp);\r\n        temp.active = lng.active; //)? true :false;\r\n        \r\n        /*if(Number(lng.active)){\r\n            //setTrans(temp);\r\n            selectedTrans = temp;\r\n        }*/\r\n    })\r\n    //console.log(trans_active);\r\n    //console.log(selectedTrans);\r\n    return res;\r\n}\r\n\r\nlet findLang = (array, title) => {\r\n    let result = array.filter(item => item.code === title );\r\n    if(result.length){\r\n        return result[0];\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst LangPopup =  (props) => {\r\n    //console.log(props);\r\n    let selectLangClass = 'hide';\r\n    //let [selectedTrans, setTrans] = useState(props.translations);\r\n\r\n    //let selectedTrans = props.translations;\r\n    //console.log(props.translations);\r\n    let selectedTrans;\r\n    filteredLangs = trans_conf; // filteredTrans();\r\n    if(filteredLangs && filteredLangs.length){\r\n        defaultTrans = filteredLangs.filter(item => item.active );\r\n    }\r\n\r\n    if(defaultTrans.length){\r\n        //setTrans(defaultTrans[0]);\r\n        selectedTrans = defaultTrans[0];\r\n    } else {\r\n        selectedTrans = undefined;\r\n    }\r\n\r\n    //console.log(selectedTrans);\r\n\r\n    let selectLang = evt => {\r\n        let lng = evt.target.value; //getAttribute('data-value');\r\n        \r\n        let temp = filteredLangs.filter(item => item.code === lng );\r\n\r\n        if(temp.length){\r\n            selectedTrans = {\r\n                code: temp[0].code, \r\n                name: temp[0].name, \r\n                nativeName: temp[0].nativeName, \r\n                active: true\r\n            };\r\n        } else {\r\n            selectedTrans = undefined;\r\n        }\r\n\r\n        props.onChange(selectedTrans);\r\n    }\r\n\r\n      let showSelectLang = () => {\r\n          selectLangClass = 'show';\r\n      }\r\n\r\n      return  <div className='lang-select'>\r\n        <section className='select-value-wrapper'>\r\n            <label >Translation: \r\n                <span>\r\n                    {props.translations.nativeName ? ' ' + props.translations.nativeName : ' None'}\r\n                </span>\r\n            </label>\r\n\r\n        </section>\r\n        <select onChange={evt => selectLang(evt)} id='q-lang' className={selectLangClass} onClick={showSelectLang}>\r\n            <option value=\"denied\">None</option>\r\n            {\r\n                filteredLangs.map(lng=> \r\n                    <option value={lng.code} key={lng.code}>{lng.name} - {lng.nativeName}</option>\r\n                )\r\n            }\r\n        \r\n        </select>\r\n       \r\n    </div>\r\n      \r\n}\r\n\r\nfunction SurahInfo (props) {\r\n    //const details = props.details;\r\n    const navBack = props.onNavBack;\r\n    const selectedSurah = props.selectedSurah;\r\n    //const transSelected = props.selectedLang;\r\n    const navNext = props.onNavNext;\r\n    const navNextClass = props.navNextClass;\r\n    const navBackClass = props.navBackClass;\r\n    const refreshData = props.refreshData;\r\n    //selectedTrans = props.selectedTrans;\r\n    \r\n    //const langPopupOpen = props.langPopupOpen;\r\n    //const onLangChange = props.onSelectLang;\r\n    //chkTrans = props.translations;\r\n\r\n    \r\n    const inputVal = props.inputVal;\r\n    //filteredLangs = props.filteredTrans;\r\n    //const onPopupOpen = props.langPopupOnOpen;\r\n\r\n    var nextBtnText = 'Next';\r\n    var backBtnClass = navBackClass;\r\n    var backBtnText = 'Back';\r\n\r\n    if(!inputVal){\r\n        nextBtnText = 'First Ayah';\r\n        backBtnText = ' ';\r\n        backBtnClass += ' off';\r\n    } \r\n\r\n\r\n    return(\r\n        <section className=\"titles-wrapper\">\r\n            <h2 className=\"surah-title\"> {selectedSurah.name}</h2>\r\n            \r\n            <p><span className=\"clearer small\">{selectedSurah.englishName}</span> | {selectedSurah.englishNameTranslation}</p>\r\n            \r\n            \r\n            { props.details && \r\n                <p>Holy Qur'an Ayah No: <span className=\"clearer\">{props.details.ayahNumber}</span> / 6236</p>\r\n            }\r\n            <div className=\"row-flex ayah-nav-wrapper margin top\">\r\n                \r\n                <button className={backBtnClass} value=\"Back\" data-value=\"back\" onClick={navBack} >\r\n                    {backBtnText}\r\n                </button>\r\n                    <p className=\"ayah-nav-text\">Surah: <span className=\"clearer\">{selectedSurah.number}</span> | Ayah: <span className=\"clearer\">{inputVal ? inputVal : '---'}</span></p>\r\n                <button className={navNextClass} value=\"Next\" data-value=\"next\" onClick={navNext} >\r\n                \r\n                    {nextBtnText}\r\n                </button>\r\n            </div>\r\n            <LangPopup \r\n                processData={refreshData} \r\n                translations={props.selectedTrans}\r\n                onChange={props.selectTrans}\r\n            />\r\n        </section>\r\n    )\r\n}\r\nexport default SurahInfo;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Langs from '../../assets/json/langs.json';\nimport './Listview.scss';\n\n//import Box from '@material-ui/core/Box';\n/*import ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';*/\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n/*import { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';*/\n//import Modal from '@material-ui/core/Modal';\n//import Popup from \"reactjs-popup\";\n//import IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n//import Slide from '@material-ui/core/Slide';\n//import Copier from '../../modules/Copier/Copier';\n\n  const getLangName = (code) => {\n    // function to get the language name from code\n    let lang = Langs.filter(item => item.code === code);\n    //console.log(lang);\n    return (lang[0].name !== 'English' ? lang[0].name + ' | ' + lang[0].nativeName : lang[0].name);\n  }\n\n  function Listview(props) {\n    \n    const results = props.results;\n    const details = props.details;\n\n    if(!props.results) return null;\n\n    return (\n      <div className=\"listview-wrapper\">\n        <List component='ul' disablePadding={false} dense={false} className=\"verse-list-ul\">\n          {results.map((value, index) =>\n            <ListItem key={index} className=\"no-padding\">\n              <ListItemText className=\"verse-text\" >\n              { value.edition.type === 'translation' &&\n                <span className=\"ayah-details\">{getLangName(value.edition.language)}</span>\n              }\n\n              { (value.edition.language === 'ar' && details.audio) && \n                <audio controls=\"controls\" className=\"q-audio-player\">\n                  <source src={details.audio} type=\"audio/wav\" />\n                  Your browser does not support the <code>audio</code> element. \n                </audio>\n              }\n              <p className={value.edition.language === 'ar'? \"txt-arabic\" :''}>{value.text}</p>\n                \n            </ListItemText>\n          </ListItem>\n          )\n        }\n        </List>\n      </div>\n    )\n  }\n    \nexport default Listview","import React from 'react';\nimport './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loader-wrapper\">\n    <p>Loading...</p>\n  </div>;\n}\n\nexport default Loader;","\n//main\nimport React from 'react';\n\n//styles\nimport './App.scss';\n\n//downloaded componenets\nimport 'typeface-roboto'; // font support \nimport {\n  WhatsappShareButton,\n  EmailShareButton,\n  WhatsappIcon\n} from 'react-share';\nimport Popup from \"reactjs-popup\";\n\n//JSON\nimport Surahs from './assets/json/SurahList.json';\nimport trans_conf from './assets/json/lang_config.json';\nimport Langs from './assets/json/langs.json';\nimport Editions from './assets/json/editions.json';\n\n//custom componenets\nimport SurahInfo from './modules/SurahInfo/SurahInfo';\nimport Listview from './components/Listview/Listview';\nimport Loader from './components/Loader/Loader';\n\n//unused - to remove\n/*import {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  PinterestShareButton,\n  VKShareButton,\n  OKShareButton,\n  RedditShareButton,\n  TumblrShareButton,\n  LivejournalShareButton,\n  MailruShareButton,\n  ViberShareButton,\n  WorkplaceShareButton,\n  EmailShareButton,\n} from 'react-share';*/\n//import TextField from '@material-ui/core/TextField';\n\n//import PropTypes from 'prop-types';\n//import { withStyles } from '@material-ui/core/styles';\n//import AppBar from '@material-ui/core/AppBar';\n//import Toolbar from '@material-ui/core/Toolbar';\n//import Popover from '@material-ui/core/Popover';\n\n//import Typography from '@material-ui/core/Typography';\n\n//import Button from '@material-ui/core/Button';\n//import Tabs from '@material-ui/core/Tabs';\n//import Tab from '@material-ui/core/Tab';\n\n//import FormGroup from '@material-ui/core/FormGroup';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\n//import Checkbox from '@material-ui/core/Checkbox';\n//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\n//import Favorite from '@material-ui/icons/Favorite';\n//import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n//import Qry from 'query-string';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        mainResult: [],\n        inputVal: '',\n        ayahDetails: {},\n        rawData: {},\n        surahList: [],\n        searchError: '',\n        searchBlockClass: 'search-wrapper',\n        selectedSurah: {},\n        selSurahNumber: 0,\n        preloader: true,\n        defaultTrans: {},\n        //filteredLangs: {},\n\n        q_edition_ar: 'quran-simple-enhanced',\n        q_edition_trans: ['en.asad', 'ml.abdulhameed'], //'en.pickthall', \n        q_edition_audio: 'ar.alafasy',\n        navBtnClass: {'back':'nav-btn back', 'next':'nav-btn next'},\n        searchBtnClass: 'search-btn inactive',\n        url_search: '',\n        total_ayahs: 0\n      }\n      //const langs = JSON.parse('./langs.json');\n      this.handleLoad = this.handleLoad.bind(this);\n      this.processData = this.processData.bind(this);\n      this.resetView = this.resetView.bind(this);\n      this.searchForAyah = this.searchForAyah.bind(this);\n      this.selectTranslation = this.selectTranslation.bind(this);\n    }\n    \n    \n    resetView() {\n      window.location.search = '';\n    }\n    componentDidMount() {\n      this.setState({\n         preloader: true\n      }, () => window.addEventListener('load', this.handleLoad));\n    }\n    \n    handleLoad(){\n      this.setState({\n        surahList: Surahs.data,\n        total_ayahs: this.getTotalAyahCount(Surahs.data),\n        url_origin: window.location.origin,\n        url_search: this.extractSearchStrings(window.location.search),\n        defaultTrans: trans_conf.filter(item => item.active)[0],\n        preloader: false\n      }, () => this.checkForSearchString());  \n        \n      \n    }\n\n    getTotalAyahCount(surahs) {\n      let totalAyah = 0;\n      surahs.map(sur => {\n        totalAyah += sur.numberOfAyahs\n      })\n      return totalAyah;\n    }\n   checkForSearchString() {\n     let search_string = this.state.url_search;\n      console.log(search_string);\n      \n      if (search_string){\n        let sur; // = search_string.split(':')[0];\n        if(search_string.split(':').length >= 2){\n          sur = search_string.split(':')[0];\n          if(Number(sur) > 114) { // if above than total surahs\n            console.log('invalid surah');\n          } else { // if valid surah number \n            this.setState({\n              selSurahNumber: sur,\n              inputVal: ''\n            },() => this.fetchSurahDetails(Number(this.state.selSurahNumber)));\n          }\n\n          if(search_string.split(':')[1] && Number(search_string.split(':')[1])){\n            console.log(this.state.selectedSurah);\n            \n\n            this.setState({\n              inputVal: search_string.split(':')[1]\n            },() => this.searchForAyah());\n          }\n         \n        } else {\n          if(Number(search_string) <= this.state.total_ayahs){\n            this.setState({\n              inputVal: search_string\n            },() => this.searchForAyah());\n          } else {\n            console.log('Invalid reference');\n          }\n        }\n        \n      }\n   }\nextractSearchStrings(url_param){\n  \n  //let url_param = window.location.search;\n  let url_string = '';\n  //let url_param = this.state.url_search;\n  let str_split = [];\n  let valid;\n  if(url_param){\n    url_param = String(url_param).replace('?','');\n    str_split = url_param.split(':'); // if -> ?<surahnumber>:<ayahnumber>\n    if(str_split.length > 1){\n      str_split.map(str => {\n        if(Number(str)) {\n          valid = true;\n        } else {\n          valid = false;\n        }\n      });\n      if(valid){\n          url_string = url_param;\n      }\n    } else {\n      str_split = url_param.split('&'); // if -> ?surah=<num>&ayah=<num>\n      let res = [];\n      if(str_split.length > 1){ // if param has 2 parts\n        str_split.map(str => {\n          let parts = str.split('='); // e.g: foo='bar'\n          if(parts.length === 2){ // if <search>=<value>\n            if(Number(parts[1])){\n              res.push(parts[1]);\n            }\n          } else {\n            if(Number(parts[0])){\n              res.push(parts[0]);\n            }\n          }\n        });\n        url_string = String(res).replace(',',':');\n      } else { // if param has only 1 part\n         let parts = str_split[0].split('='); // e.g: foo='bar'\n          if(parts.length === 2){ // if <search>=<value>\n            if(Number(parts[1])){\n              url_string = parts[1];\n            }\n          } else {\n            if(Number(parts[0])){\n              url_string = parts[0];\n            }\n          }\n      }\n\n    }\n    \n  }\n   return url_string;\n  \n}\n\nfilteredTrans() {\n    let res = [];\n    let test = {};\n    trans_conf.map(lng => {\n        let temp = Langs.filter(item => item.code === lng.code)[0];\n        res.push(temp);\n        temp.active = Number(lng.active)? true :false;\n        \n        if(Number(lng.active)){\n            this.selectTranslation(temp);\n        }\n    })\n    //console.log(this.state.selectedTrans);\n    return res;\n}\n\n    validateInput(value){\n      let isValid = true;\n      let totAyahs;\n      if(this.state.selectedSurah.number){\n        totAyahs = Number(this.state.selectedSurah.numberOfAyahs);\n      }\n      else {\n        totAyahs = 6236;\n      }\n      \n      if(Number(value) > totAyahs){\n        isValid = false;\n      }\n      return isValid;\n    }\n    searchForAyah(event) {\n      let filter = Number(this.state.inputVal);\n      \n      let q_editions = (this.state.q_edition_ar + ',' + this.state.q_edition_trans + ',' + this.state.q_edition_audio) ;\n      this.setState({\n         preloader: true\n      });\n        \n\n      if(this.state.ayahDetails && this.state.ayahDetails.audio){\n        console.log(this.state.mainResult[0]);\n        this.setState({\n          preloader: true,\n          ayahDetails: {audio: ''}\n        })\n      }\n      let isRefValid = this.validateInput(filter);\n    \n      if(!filter || !isRefValid){\n        console.log(this.state.searchError);\n        this.setState({\n         preloader: false\n        });\n        return false;\n      }\n\n\n      if(String(filter).split(':').length <= 1){\n        if(this.state.selSurahNumber > 0){\n          filter = this.state.selSurahNumber + \":\" + filter;\n        } \n      } \n      const cachedFetch = (url, options) => {\n        // Use the URL as the cache key to sessionStorage\n      let cacheKey = url\n      // START new cache HIT code\n      let cached = sessionStorage.getItem(cacheKey)\n      if (cached !== null) {\n        // it was in sessionStorage! Yay!\n        console.log('already cached')\n        let response = new Response(new Blob([cached]));\n        return Promise.resolve(response);\n      }\n      // END new cache HIT code\n      return fetch(url, options).then(response => {\n        // let's only store in cache if the content-type is\n        // JSON or something non-binary\n        let ct = response.headers.get('Content-Type')\n        if (ct && (ct.match(/application\\/json/i) || ct.match(/text\\//i))) {\n          // There is a .json() instead of .text() but\n          // we're going to store it in sessionStorage as\n          // string anyway.\n          // If we don't clone the response, it will be\n          // consumed by the time it's returned. This\n          // way we're being un-intrusive.\n          response.clone().text().then(content => {\n            sessionStorage.setItem(cacheKey, content)\n          })\n        }\n        return response\n        })\n      }\n\n     \n        cachedFetch('https://api.alquran.cloud/v1/ayah/' + filter + '/editions/' + q_editions)\n          .then(res => res.json())\n          .then((data) => {\n            console.log(data.data[0]);\n            this.setState({\n              selectedSurah: data.data[0].surah,\n              selSurahNumber: data.data[0].surah.number,\n              inputVal: data.data[0].numberInSurah,\n              searchError:'',\n              rawData :data\n            }, () => this.processData(data));\n          })\n          .catch(\n            this.setState({\n             searchError: 'data error'\n            })\n          )\n        \n    }\n    \n    selectTranslation(trans){\n      console.log(trans);\n\n      let refreshData = false;\n      if(this.state.defaultTrans) {\n        if(trans){\n          if(this.state.defaultTrans.code !== trans.code){\n            refreshData = true;\n          }\n        } else {\n          refreshData = true;\n        }\n      } else {\n        if(trans){\n          refreshData = true;\n        }\n      }\n      if(refreshData){\n        this.setState({\n          defaultTrans: trans\n        }, () => this.processData(this.state.rawData));\n      }\n    }\n\n     processData(results) {\n      let res = [];\n      let audio = '';\n      let details = null;\n      let result = this.state.rawData;\n     \n      if(!result || !result.data){\n        console.log('no data');\n        return false;\n      }\n      \n        result.data.map(item => {\n            let filteredItem = null;\n            var flag = false;\n            /* separate audio details */\n            if(!item.audio){\n              \n              filteredItem = {'edition': item.edition, 'text': item.text};\n              \n              if(item.edition.language === 'ar') {\n                flag = true;\n              } else {\n                if(this.state.defaultTrans) {\n                  if(item.edition.language === this.state.defaultTrans.code){\n                    flag = true;\n                  }\n                }\n              }\n\n              if(flag){\n                res.push(filteredItem);\n              }\n              //flag = true;\n            }\n            else{\n              if(audio === ''){\n                audio = item.audio;\n              }\n            }\n            \n            if(!details){\n\n              details = item.surah;\n              \n              details = Object.assign(details, {\n                'hizbQuarter': item.hizbQuarter,\n                'juz': item.juz,  \n                'manzil': item.manzil,\n                'ayahNumber': item.number,\n                'numberInSurah': item.numberInSurah,\n                'page': item.page,\n                'ruku': item.ruku,\n                'sajda': item.sajda\n              });\n            }\n            return true;\n          }\n        )\n        \n        if(audio){\n          details = Object.assign(details, {'audio': audio});\n        }\n        this.setState({ \n          ayahDetails: details, \n          mainResult: res,\n          preloader: false\n          \n        });\n        return true;\n    }\n    \n    updateInputVal(evt) {\n      let value = evt.target.value;\n      let isValid = this.validateInput(value);\n      let navBackClass = this.state.navBtnClass.back;\n      let navNextClass = this.state.navBtnClass.next; \n      let searchBtn;\n      \n      if(isValid){\n        this.setState({\n          inputVal: evt.target.value\n        });\n      } \n\n      if(!Number(value)){\n        searchBtn = 'search-btn inactive';\n      } else {\n        searchBtn = 'search-btn';\n      }\n      if(value <= 1){\n        navNextClass = 'nav-btn next';\n        navBackClass = 'nav-btn back disabled';\n      } else {\n        navBackClass = 'nav-btn back';\n        if(this.state.selSurahNumber > 0 && value === this.state.selectedSurah.numberOfAyahs){\n          navNextClass = 'nav-btn next disabled';\n        } else {\n          navNextClass = 'nav-btn next';\n        }\n      }\n      this.setState({\n        searchBtnClass: searchBtn,\n        navBtnClass: {\n          back: navBackClass,\n          next: navNextClass\n        }\n      })\n\n    }\n    verifyInputKey(evt) {\n      //console.log('asdf');\n      if(evt.keyCode === 186) { \n        this.setState({\n          selSurahNumber: evt.target.value,\n          inputVal: ''\n        },() => this.fetchSurahDetails(Number(this.state.selSurahNumber)));\n      }\n    }\n\n    selectSurah = (evt) => {\n      //console.log(evt.target.value || evt.target.getAttribute('data-value'));\n      let dataVal = evt.target.value || evt.target.getAttribute('data-value');\n      \n      this.setState({\n        preloader: true\n      }, () => this.fetchSurahDetails(Number(dataVal)));\n    }\n    fetchSurahDetails(dataVal){\n      let selSurah = [];\n      if(dataVal > 0){\n        selSurah = this.state.surahList.filter(surah => Number(surah.number) === Number(dataVal));\n        \n        this.setState({\n          selectedSurah: selSurah[0],\n          selSurahNumber: selSurah[0].number\n        }, () => {console.log(this.state.selectedSurah)});\n      }\n     // console.log(this.state.selectedSurah);\n      this.setState({ \n        ayahDetails: {},\n        mainResult: [], \n        preloader: false\n      }, () => {this.ayahInput.focus()});\n      \n    }\nfindLang = (array, title) => {\n    let result = array.filter(item => item.code === title );\n    if(result.length){\n        return result[0];\n    } else {\n        return false;\n    }\n}\n\nnavigateAyah = (evt) => {\n  let data = evt.target.getAttribute('data-value');\n  let valNow = Number(this.state.inputVal);\n  let totAyahs = Number(this.state.selectedSurah.numberOfAyahs); \n  let navBackClass = this.state.navBtnClass.back;\n  let navNextClass = this.state.navBtnClass.next; \n  switch (data){\n    case \"back\":  \n      if(valNow > 1) {\n        valNow--;\n      }\n      break;\n    case \"next\":\n      if(valNow < totAyahs) {\n        valNow++;\n      }\n      break;\n      \n    default:\n  }\n   if(valNow === 1){\n      navNextClass = 'nav-btn next';\n      navBackClass = 'nav-btn back disabled';\n    } else {\n      navBackClass = 'nav-btn back';\n      if(this.state.selSurahNumber > 0 && valNow === this.state.selectedSurah.numberOfAyahs){\n        navNextClass = 'nav-btn next disabled';\n      } else {\n        navNextClass = 'nav-btn next';\n      }\n    }\n  this.setState({\n    inputVal: String(valNow),\n    navBtnClass: {back: navBackClass, next: navNextClass}\n  }, () => this.searchForAyah(evt));\n  \n}\n  render(){\n    let listview;\n// url is 'https://www.example.com/user?id=123&type=4';\n  \n    /*let default_trans = trans_conf.filter(item => item.active === '1');\n\n    if(default_trans.length){\n\n    }*/\n\n    if(this.state.mainResult.length){\n      listview = <Listview \n        key={this.state.ayahDetails && this.state.number} \n        results={this.state.mainResult} \n        details={this.state.ayahDetails}\n        />\n    }\n    const surahs = this.state.surahList;\n    const selectedSurah = this.state.selectedSurah;\n    let share_url = '';\n    if(selectedSurah && this.state.inputVal){\n        share_url = this.state.url_origin + '?' + selectedSurah.number + ':' + this.state.inputVal;\n    }\n    const SharePopup =  () => (\n      <Popup\n        trigger={<button value=\"Share\" className=\"share-button\">Share</button>}\n        on=\"click\"\n        position=\"center center\"\n        modal\n        closeOnDocumentClick\n        className=\"surah-popup\"\n        onRequestClose={() => {\n          this.setState({ modalIsOpen: false });\n        }}\n      >\n        <div className=\"popup-wrapper\">\n          <h3>Share this Ayah ({this.state.selSurahNumber}:{this.state.inputVal})</h3>\n          <div className=\"share-content-wrapper\">\n            <label htmlFor=\"share-message\" >Message (optional)</label>\n            <textarea placeholder=\"Enter message, if any\" rows=\"4\" cols=\"38\" className=\"share-msg\" maxLength=\"120\" autofocus=\"autofocus\" />\n            <WhatsappShareButton \n              title=\"Q-search - Check this Ayah\" \n              url={share_url} \n              seperator=\" \"\n              className=\"wa-btn\"  \n              />\n            </div>\n            <EmailShareButton \n              subject=\"Q-search - check this ayah\"\n              body=\"body text goes here\"\n              seperator=\"^\"\n              openWindow=\"true\"\n            />\n        </div>\n      </Popup>\n    )\n    /*const closeBubble = (evt) => {\n      console.log(evt.target);\n    }*/\n    const SurahPopup =  () => (\n      <Popup\n        trigger={<button value=\"Surahs\" className=\"surah-button\">Surah</button>}\n        on=\"click\"\n        position=\"center center\"\n        modal\n        closeOnDocumentClick\n        className=\"surah-popup\"\n        onRequestClose={() => {\n          this.setState({ modalIsOpen: false });\n        }}\n      >\n      <div className=\"popup-wrapper\">\n        <h3>Select Surah:</h3>\n        <ul className=\"surah-list-ul\">\n          <li className=\"row-flex list-heads\">\n            <p className=\"sno\" >No.</p>\n            <p className=\"sname\">Surah Name</p>\n            <p className=\"sayah\">Ayahs</p>\n          </li>\n        {\n          surahs.map(surah => <li  key={surah.number} value={surah.number} className=\"row-flex\" onClick={this.selectSurah}>\n          \n            <span data-value={surah.number} className=\"sno\">{surah.number}</span>\n            <span data-value={surah.number} className=\"sname\">{surah.englishName}</span>\n            <span data-value={surah.number} className=\"sayah\">{surah.numberOfAyahs}</span>\n          \n          </li>)\n        }\n        </ul>\n      </div>\n      </Popup>\n    )\n    \n\n  return (\n    <div className=\"page-wrapper\">\n      <header className=\"App-header\">\n       <h1 onClick={this.resetView}>\n          Q-Search\n       </h1>\n       {\n         /*(share_url !== '') &&\n        <SharePopup /> */\n      }\n      </header>\n      {\n        selectedSurah.number && \n\n        <SurahInfo \n          details={this.state.ayahDetails} \n          onNavNext={this.navigateAyah} \n          onNavBack ={this.navigateAyah} \n          selectedSurah ={selectedSurah}\n          totalAyahs = {this.state.total_ayahs}\n          navBackClass = {this.state.navBtnClass.back}\n          navNextClass = {this.state.navBtnClass.next}\n          inputVal = {this.state.inputVal}\n          refreshData = {this.processData}\n          selectedTrans = {this.state.defaultTrans}\n          selectTrans = {this.selectTranslation}\n          />\n      }\n        <section className={this.state.searchBlockClass} id=\"search-block\">\n        <div className=\"row-flex ayah-input-wrapper\" >\n          <div className=\"row-flex surah-select-wrapper\" >\n            <div className=\"help-bubble left bottom\" onClick={(evt) => this.closeBubble} hidden >\n              <p>Tap to select Surah here.</p>\n            </div>\n            <SurahPopup />\n            \n            {this.state.selSurahNumber > 0 && \n              <p ref={(sur) => { this.surahLabel = sur; }} className=\"surah-name\">{this.state.selSurahNumber}:</p>\n            }\n          </div>\n          <div className=\"ayah-input\">\n            <label hidden>Ayah Number:</label>\n            <input type=\"number\"\n              value={this.state.inputVal}\n              onChange={evt =>this.updateInputVal(evt)}\n              onKeyDown={evt => this.verifyInputKey(evt)}\n              placeholder=\"Ayah No.\"\n              ref={(input) => { this.ayahInput = input; }} \n              className=\"input-ayah\"\n              pattern=\"^[0-9]*$\"\n              min=\"1\"\n              max={this.state.selectedSurah.numberOfAyahs}\n            />\n            \n              <label ref={(sur) => { this.surahLabel = sur; }} className=\"ayah-total\">of {this.state.selectedSurah.numberOfAyahs ? this.state.selectedSurah.numberOfAyahs : 6236 }</label>\n            \n          </div>\n          <button onClick={this.searchForAyah} className={this.state.searchBtnClass} value=\"Search\" >Search</button>\n         </div> \n        </section>\n      <div className='content-wrapper'>\n        {listview}\n         \n      </div>\n      \n      { this.state.preloader && \n        <Loader />\n        \n      }\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}