{"version":3,"sources":["components/LangPopup/LangPopup.js","modules/SurahInfo/SurahInfo.js","components/Listview/Listview.js","components/Loader/Loader.js","modules/StringExtract/StringExtract.js","App.js","serviceWorker.js","index.js"],"names":["LangPopup","props","selectedTrans","defaultTrans","selectLangClass","filteredLangs","trans_conf","length","filter","item","active","undefined","react_default","a","createElement","className","translations","nativeName","onChange","evt","lng","target","value","temp","code","name","selectLang","id","onClick","map","key","SurahInfo","inputVal","onNavBack","selectedSurah","onNavNext","navNextClass","navBackClass","refreshData","nextBtnText","backBtnClass","backBtnText","englishName","englishNameTranslation","details","ayahNumber","data-value","number","numberInSurah","LangPopup_LangPopup","processData","selectTrans","getLangName","lang","Langs","Listview","results","List_default","component","disablePadding","dense","index","ListItem_default","ListItemText_default","edition","type","language","audio","controls","src","text","Loader","StringExtract","url_param","console","log","valid","url_string","str_split","String","replace","split","str","Number","res","parts","push","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectSurah","dataVal","getAttribute","getSurahDetails","findLang","array","title","result","navigateAyah","data","valNow","state","totAyahs","numberOfAyahs","navBtnClass","back","next","selSurahNumber","setState","searchForAyah","mainResult","ayahDetails","rawData","surahList","searchError","searchBlockClass","preloader","filterInput","q_edition_ar","q_edition_trans","q_edition_audio","searchBtnClass","url_search","totalQuranAyahs","shareBody","versesNowShowing","showHelp","handleLoad","bind","assertThisInitialized","resetView","selectTranslation","window","location","search","_this2","addEventListener","_this3","Surahs","getTotalAyahCount","url_origin","origin","checkForSearchString","surahs","totalAyah","sur","_this4","search_string","isValid","_this5","loader","q_editions","isRefValid","validateInput","url","options","cacheKey","cached","sessionStorage","getItem","response","Response","Blob","Promise","resolve","fetch","then","ct","headers","get","match","clone","content","setItem","cachedFetch","json","surah","catch","trans","_this6","_this7","verseShowing","filteredItem","flag","assign","hizbQuarter","juz","manzil","page","ruku","sajda","searchBtn","_this8","keyCode","fetchSurahDetails","_this9","getAyahFromUrl","_this10","ayah","ayahInput","focus","selSurah","listview","_this11","components_Listview_Listview","share_url","SurahInfo_SurahInfo","totalAyahs","closeBubble","hidden","reactjs_popup_es","trigger","on","position","modal","closeOnDocumentClick","onRequestClose","modalIsOpen","ref","surahLabel","updateInputVal","onKeyDown","verifyInputKey","placeholder","input","pattern","min","max","components_Loader_Loader","React","Component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7d27491.chunk.js","sourcesContent":["import React from 'react';\r\nimport trans_conf from '../../assets/json/lang_config.json';\r\n\r\nexport const LangPopup =  (props) => {\r\n    //console.log(props);\r\n    let selectLangClass = 'hide';\r\n    \r\n    let selectedTrans;\r\n    let defaultTrans;\r\n    let filteredLangs = trans_conf; // filteredTrans();\r\n    if(filteredLangs && filteredLangs.length){\r\n        defaultTrans = filteredLangs.filter(item => item.active );\r\n    }\r\n\r\n    if(defaultTrans.length){\r\n        //setTrans(defaultTrans[0]);\r\n        selectedTrans = defaultTrans[0];\r\n    } else {\r\n        selectedTrans = undefined;\r\n    }\r\n\r\n    //console.log(selectedTrans);\r\n\r\n    let selectLang = evt => {\r\n        let lng = evt.target.value; //getAttribute('data-value');\r\n        \r\n        let temp = filteredLangs.filter(item => item.code === lng );\r\n\r\n        if(temp.length){\r\n            selectedTrans = {\r\n                code: temp[0].code, \r\n                name: temp[0].name, \r\n                nativeName: temp[0].nativeName, \r\n                active: true\r\n            };\r\n        } else {\r\n            selectedTrans = undefined;\r\n        }\r\n\r\n        props.onChange(selectedTrans);\r\n    }\r\n\r\n      let showSelectLang = () => {\r\n          selectLangClass = 'show';\r\n      }\r\n\r\n      return  <div className='lang-select'>\r\n        <section className='select-value-wrapper'>\r\n            <label >Translation: \r\n                <span>\r\n                    {props.translations && props.translations.nativeName ? ' ' + props.translations.nativeName : ' None'}\r\n                </span>\r\n            </label>\r\n\r\n        </section>\r\n        <select onChange={evt => selectLang(evt)} id='q-lang' className={selectLangClass} onClick={showSelectLang}>\r\n            <option value=\"denied\">None</option>\r\n            {\r\n                filteredLangs.map(lng=> \r\n                    <option value={lng.code} key={lng.code}>{lng.name} - {lng.nativeName}</option>\r\n                )\r\n            }\r\n        \r\n        </select>\r\n       \r\n    </div>\r\n      \r\n}","import React, {useState} from 'react';\r\n\r\nimport Langs from '../../assets/json/langs.json';\r\nimport trans_conf from '../../assets/json/lang_config.json';\r\nimport {LangPopup} from '../../components/LangPopup/LangPopup';\r\n//import Popup from \"reactjs-popup\";\r\n\r\n//var chkTrans = {}; // = {'english': false, 'malayalam' : false};\r\n\r\n//let filteredLangs ; //Langs.filter(item => item.code === 'en' || item.code === 'ml' );\r\n//let defaultTrans = undefined;\r\n//let popupStatus = false ;\r\n\r\n\r\nlet filteredTrans = () => {\r\n    let res = [];\r\n    \r\n    let test = {};\r\n    console.log(trans_conf);\r\n    trans_conf.map(lng => {\r\n        let temp = Langs.filter(item => item.code === lng.code)[0];\r\n        res.push(temp);\r\n        temp.active = lng.active; //)? true :false;\r\n        \r\n    })\r\n    \r\n    return res;\r\n}\r\n\r\nlet findLang = (array, title) => {\r\n    let result = array.filter(item => item.code === title );\r\n    if(result.length){\r\n        return result[0];\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction SurahInfo (props) {\r\n    \r\n\r\n    const { inputVal, onNavBack, selectedSurah, onNavNext, navNextClass, navBackClass, refreshData} = props;\r\n    \r\n    \r\n    //const inputVal = props.inputVal;\r\n    \r\n\r\n    var nextBtnText = 'Next';\r\n    var backBtnClass = navBackClass;\r\n    var backBtnText = 'Back';\r\n\r\n    if(!inputVal){\r\n        nextBtnText = 'First Ayah';\r\n        backBtnText = ' ';\r\n        backBtnClass += ' off';\r\n    } \r\n\r\n    return(\r\n        <section className=\"titles-wrapper\">\r\n            <h2 className=\"surah-title\"> {selectedSurah.name}</h2>\r\n            \r\n            <p><span className=\"clearer small\">{selectedSurah.englishName}</span> | {selectedSurah.englishNameTranslation}</p>\r\n            \r\n            { props.details && \r\n                <p>Holy Qur'an Ayah No: <span className=\"clearer\">{props.details.ayahNumber}</span> / 6236</p>\r\n            }\r\n            <div className=\"row-flex ayah-nav-wrapper margin top\">\r\n                \r\n                <button className={backBtnClass} value=\"Back\" data-value=\"back\" onClick={onNavBack} >\r\n                    {backBtnText}\r\n                </button>\r\n                    <p className=\"ayah-nav-text\">Surah: <span className=\"clearer\">{selectedSurah.number}</span> | Ayah: <span className=\"clearer\">{selectedSurah.numberInSurah?selectedSurah.numberInSurah:'---'}</span></p>\r\n                <button className={navNextClass} value=\"Next\" data-value=\"next\" onClick={onNavNext} >\r\n                \r\n                    {nextBtnText}\r\n                </button>\r\n            </div>\r\n            <LangPopup \r\n                processData={refreshData} \r\n                translations={props.selectedTrans}\r\n                onChange={props.selectTrans}\r\n            />\r\n        </section>\r\n    )\r\n}\r\nexport default SurahInfo;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Langs from '../../assets/json/langs.json';\nimport './Listview.scss';\n\n//import Box from '@material-ui/core/Box';\n/*import ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';*/\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n/*import { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';*/\n//import Modal from '@material-ui/core/Modal';\n//import Popup from \"reactjs-popup\";\n//import IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n//import Slide from '@material-ui/core/Slide';\n//import Copier from '../../modules/Copier/Copier';\n\nconst getLangName = (code) => {\n  // function to get the language name from code\n  let lang = Langs.filter(item => item.code === code);\n  //console.log(lang);\n  return (lang[0].name !== 'English' ? lang[0].name + ' | ' + lang[0].nativeName : lang[0].name);\n}\n\nfunction Listview(props) {\n\n  const results = props.results;\n  const details = props.details;\n\n  if (!props.results) return null;\n\n  return (\n    <div className=\"listview-wrapper\">\n      <List component='ul' disablePadding={false} dense={false} className=\"verse-list-ul\">\n        {results.map((value, index) =>\n          <ListItem key={index} className=\"no-padding\">\n            <ListItemText className=\"verse-text\" >\n              { value.edition.type === 'translation' &&\n                <span className=\"ayah-details\">{getLangName(value.edition.language) }</span>\n              }\n\n              { (value.edition.language === 'ar' && details.audio) &&\n                <audio controls=\"controls\" className=\"q-audio-player\">\n                  <source src={details.audio} type=\"audio/wav\" />\n                  Your browser does not support the <code>audio</code> element.\n                </audio>\n              }\n              <p className={value.edition.language === 'ar' ? \"txt-arabic\" : ''}>{value.text}</p>\n\n            </ListItemText>\n          </ListItem>\n        )\n        }\n      </List>\n    </div>\n  )\n}\n\nexport default Listview","import React from 'react';\nimport './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loader-wrapper\">\n    <p>Loading...</p>\n  </div>;\n}\n\nexport default Loader;","export function StringExtract(url_param) {\r\n// --- extract surah & ayah numbers from url string\r\n    console.log(url_param);\r\n    let url_string = '';\r\n    \r\n    let str_split = [];\r\n    let valid;\r\n    if (url_param) {\r\n      url_param = String(url_param).replace('?', '');\r\n      str_split = url_param.split(':'); // if -> ?<surahnumber>:<ayahnumber>\r\n      if (str_split.length > 1) {\r\n        str_split.map(str => {\r\n          if (Number(str)) {\r\n            valid = true;\r\n          } else {\r\n            valid = false;\r\n          }\r\n        });\r\n        if (valid) {\r\n          url_string = url_param;\r\n        }\r\n      } else {\r\n        str_split = url_param.split('&'); // if -> ?surah=<num>&ayah=<num>\r\n        let res = [];\r\n        if (str_split.length > 1) { // if param has 2 parts\r\n          str_split.map(str => {\r\n            let parts = str.split('='); // e.g: foo='bar'\r\n            if (parts.length === 2) { // if <search>=<value>\r\n              if (Number(parts[1])) {\r\n                res.push(parts[1]);\r\n              }\r\n            } else {\r\n              if (Number(parts[0])) {\r\n                res.push(parts[0]);\r\n              }\r\n            }\r\n          });\r\n          url_string = String(res).replace(',', ':');\r\n        } else { // if param has only 1 part\r\n          let parts = str_split[0].split('='); // e.g: foo='bar'\r\n          if (parts.length === 2) { // if <search>=<value>\r\n            if (Number(parts[1])) {\r\n              url_string = parts[1];\r\n            }\r\n          } else {\r\n            if (Number(parts[0])) {\r\n              url_string = parts[0];\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n    return url_string\r\n  }","\n//main\nimport React from 'react';\n//styles\nimport './App.scss';\n\n//downloaded componenets\nimport 'typeface-roboto'; // font support \nimport {\n  WhatsappShareButton,\n  EmailShareButton,\n  WhatsappIcon,\n  EmailIcon\n} from 'react-share';\nimport Popup from \"reactjs-popup\";\n\n//JSON\nimport Surahs from './assets/json/SurahList.json';\nimport trans_conf from './assets/json/lang_config.json';\n\n//custom componenets\nimport SurahInfo from './modules/SurahInfo/SurahInfo';\nimport Listview from './components/Listview/Listview';\nimport Loader from './components/Loader/Loader';\nimport { StringExtract } from './modules/StringExtract/StringExtract';\n//import {BrowserRouter, Link, Route, Switch} from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainResult: [],\n      inputVal: '',\n      ayahDetails: {},\n      rawData: {},\n      surahList: [],\n      searchError: '',\n      searchBlockClass: 'search-wrapper',\n      selectedSurah: {},\n      selSurahNumber: 0,\n      preloader: true,\n      defaultTrans: {},\n      filterInput: '',\n      //filteredLangs: {},\n\n      q_edition_ar: 'quran-simple-enhanced',\n      q_edition_trans: ['en.asad', 'ml.abdulhameed'], //'en.pickthall', \n      q_edition_audio: 'ar.alafasy',\n      navBtnClass: { 'back': 'nav-btn back', 'next': 'nav-btn next' },\n      searchBtnClass: 'search-btn inactive',\n      url_search: '',\n      totalQuranAyahs: 0,\n      shareBody: '',\n      versesNowShowing: [],\n      showHelp: true\n    }\n    //const langs = JSON.parse('./langs.json');\n    this.handleLoad = this.handleLoad.bind(this);\n    this.processData = this.processData.bind(this);\n    this.resetView = this.resetView.bind(this);\n    this.searchForAyah = this.searchForAyah.bind(this);\n    this.selectTranslation = this.selectTranslation.bind(this);\n  }\n\n  // - ---- reload page with reset values\n  resetView() {\n    window.location.search = '';\n  }\n\n  componentDidMount() {\n    this.setState({\n      preloader: true,\n      \n    }, () => window.addEventListener('load', this.handleLoad));\n  }\n\n  //----- on page load  \n  handleLoad() {\n    // initialize with startup values - surah list, total ayah count, url string & search, default translation selected if any. \n    this.setState({\n      surahList: Surahs.data,\n      totalQuranAyahs: this.getTotalAyahCount(Surahs.data),\n      url_origin: window.location.origin,\n      url_search: StringExtract(window.location.search), //this.extractSearchStrings(window.location.search),\n      defaultTrans: trans_conf.filter(item => item.active)[0],\n      preloader: false,\n      showHelp: true\n    }, () => this.checkForSearchString());\n\n\n  }\n\n  // ---- get total number of ayahs in Qur'an \n  getTotalAyahCount(surahs) {\n    let totalAyah = 0;\n    surahs.map(sur => {\n      totalAyah += sur.numberOfAyahs\n    })\n    return totalAyah;\n  }\n\n  // --- check the ayah number provided in url string\n  checkForSearchString() {\n    let search_string = this.state.url_search;\n    console.log(search_string);\n\n    if (search_string) {\n      let sur; // = search_string.split(':')[0];\n      if (search_string.split(':').length >= 2) {\n        sur = search_string.split(':')[0];\n        this.getSurahDetails(sur);\n\n      } else {\n        if (Number(search_string) <= this.state.totalQuranAyahs) {\n          this.setState({\n            inputVal: search_string\n          }, () => this.searchForAyah());\n        } else {\n          console.log('Invalid reference');\n        }\n      }\n\n    }\n  }\n\n  // -- validate the ayah number input from user\n  validateInput(value) {\n    let isValid = true;\n    let totAyahs;\n    if (this.state.selectedSurah.number) {\n      totAyahs = Number(this.state.selectedSurah.numberOfAyahs);\n    }\n    else {\n      totAyahs = 6236;\n    }\n\n    if (Number(value) > totAyahs) {\n      isValid = false;\n    }\n    return isValid;\n  }\n\n  // --  search for ayah result \n  searchForAyah() {\n    let filter = Number(this.state.inputVal);\n    let loader = this.state.preloader;\n    let q_editions = (this.state.q_edition_ar + ',' + this.state.q_edition_trans + ',' + this.state.q_edition_audio);\n\n    \n    if (this.state.ayahDetails && this.state.ayahDetails.audio) {\n      // reset existing audio data \n      this.setState({\n        ayahDetails: { audio: '' }\n      })\n    }\n\n    if (!loader) {\n      this.setState({\n        preloader: true\n      });\n    }\n    let isRefValid = this.validateInput(filter);\n\n    if (!filter || !isRefValid) {\n      console.log(this.state.searchError);\n      this.setState({\n        preloader: false\n      });\n      return false;\n    }\n\n\n    if (String(filter).split(':').length <= 1) {\n      if (this.state.selSurahNumber > 0) {\n        filter = this.state.selSurahNumber + \":\" + filter;\n      }\n    }\n    const cachedFetch = (url, options) => {\n      // Use the URL as the cache key to sessionStorage\n      let cacheKey = url\n      // START new cache HIT code\n      let cached = sessionStorage.getItem(cacheKey)\n      if (cached !== null) {\n        // it was in sessionStorage! Yay!\n        console.log('already cached')\n        let response = new Response(new Blob([cached]));\n        return Promise.resolve(response);\n      }\n      // END new cache HIT code\n      return fetch(url, options).then(response => {\n        // let's only store in cache if the content-type is\n        // JSON or something non-binary\n        let ct = response.headers.get('Content-Type')\n        if (ct && (ct.match(/application\\/json/i) || ct.match(/text\\//i))) {\n          // There is a .json() instead of .text() but\n          // we're going to store it in sessionStorage as\n          // string anyway.\n          // If we don't clone the response, it will be\n          // consumed by the time it's returned. This\n          // way we're being un-intrusive.\n          response.clone().text().then(content => {\n            sessionStorage.setItem(cacheKey, content)\n          })\n        }\n        return response\n      })\n    }\n\n\n    cachedFetch('https://api.alquran.cloud/v1/ayah/' + filter + '/editions/' + q_editions)\n      .then(res => res.json())\n      .then((data) => {\n        //console.log(data.data[0]);\n        this.setState({\n          selectedSurah: data.data[0].surah,\n          selSurahNumber: data.data[0].surah.number,\n          inputVal: data.data[0].numberInSurah,\n          searchError: '',\n          rawData: data\n        }, () => this.processData());\n      })\n      .catch(\n        this.setState({\n          searchError: 'data error'\n        })\n      )\n        \n  }\n\n  // -- select the translation from drop down\n  selectTranslation(trans) {\n    console.log(trans);\n\n    let refreshData = false;\n    if (this.state.defaultTrans) {\n      if (trans) {\n        if (this.state.defaultTrans.code !== trans.code) {\n          refreshData = true;\n        }\n      } else {\n        refreshData = true;\n      }\n    } else {\n      if (trans) {\n        refreshData = true;\n      }\n    }\n    if (refreshData) {\n      this.setState({\n        defaultTrans: trans\n      }, () => this.processData());\n    }\n  }\n\n  // -- process the data retreived from ayah api - the main result \n  processData() {\n    let res = [];\n    let audio = '';\n    let details = null;\n    let result = this.state.rawData;\n    let verseShowing = [];\n\n    if (!result || !result.data) {\n      console.log('no data');\n      return false;\n    }\n\n    result.data.map(item => {\n      let filteredItem = null;\n      var flag = false;\n      /* separate audio details */\n      if (!item.audio) {\n\n        filteredItem = { 'edition': item.edition, 'text': item.text };\n\n        if (item.edition.language === 'ar') {\n          flag = true;\n\n        } else {\n          if (this.state.defaultTrans) {\n            if (item.edition.language === this.state.defaultTrans.code) {\n              flag = true;\n            }\n          }\n        }\n\n        if (flag) {\n          verseShowing.push(item.text + \"\\n[Qur'an - \" + this.state.selSurahNumber + ':' + this.state.inputVal + ']\\n---');\n          res.push(filteredItem);\n        }\n        //flag = true;\n      }\n      else {\n        if (audio === '') {\n          audio = item.audio;\n        }\n      }\n\n      if (!details) {\n\n        details = item.surah;\n\n        details = Object.assign(details, {\n          'hizbQuarter': item.hizbQuarter,\n          'juz': item.juz,\n          'manzil': item.manzil,\n          'ayahNumber': item.number,\n          'numberInSurah': item.numberInSurah,\n          'page': item.page,\n          'ruku': item.ruku,\n          'sajda': item.sajda\n        });\n      }\n      return true;\n    }\n    )\n\n    if (audio) {\n      details = Object.assign(details, { 'audio': audio });\n    }\n    this.setState({\n      ayahDetails: details,\n      mainResult: res,\n      preloader: false,\n      versesNowShowing: verseShowing\n    }, () => (console.log(this.state.versesNowShowing)));\n\n    return true;\n  }\n\n  // -- update the user input \n  updateInputVal(evt) {\n    let value = evt.target.value;\n    let isValid = this.validateInput(value);\n    let navBackClass = this.state.navBtnClass.back;\n    let navNextClass = this.state.navBtnClass.next;\n    let searchBtn;\n\n    if (isValid) {\n      this.setState({\n        inputVal: evt.target.value\n      });\n    }\n\n    if (!Number(value)) {\n      searchBtn = 'search-btn inactive';\n    } else {\n      searchBtn = 'search-btn';\n    }\n    if (value <= 1) {\n      navNextClass = 'nav-btn next';\n      navBackClass = 'nav-btn back disabled';\n    } else {\n      navBackClass = 'nav-btn back';\n      if (this.state.selSurahNumber > 0 && value === this.state.selectedSurah.numberOfAyahs) {\n        navNextClass = 'nav-btn next disabled';\n      } else {\n        navNextClass = 'nav-btn next';\n      }\n    }\n    this.setState({\n      searchBtnClass: searchBtn,\n      navBtnClass: {\n        back: navBackClass,\n        next: navNextClass\n      }\n    })\n\n  }\n\n  // -- verify key pressed in ayah input field\n  verifyInputKey(evt) {\n    //console.log('asdf');\n    if (evt.keyCode === 186) {\n      this.setState({\n        selSurahNumber: evt.target.value,\n        inputVal: ''\n      }, () => this.fetchSurahDetails(Number(this.state.selSurahNumber)));\n    }\n  }\n\n  // --- select surah from popup \n  selectSurah = (evt) => {\n    console.log('-----------------');\n\n    console.log(this.props);\n    //console.log(evt.target.value || evt.target.getAttribute('data-value'));\n    let dataVal = evt.target.value || evt.target.getAttribute('data-value');\n    this.getSurahDetails(dataVal);\n  }\n\n  // -- get surah details initiate \n  getSurahDetails(dataVal) {\n    if (dataVal > 0 && dataVal <= 114) {\n      this.setState({\n        preloader: true,\n        selSurahNumber: dataVal,\n        selectedSurah: this.fetchSurahDetails(Number(dataVal))\n      }, () => this.getAyahFromUrl());\n    } else {\n      console.log('Error: Surah Number Invalid!');\n    }\n\n  }\n\n  // --- get ayah input from url string\n  getAyahFromUrl() {\n    console.log(this.state.selectedSurah);\n    let search_string = this.state.url_search;\n\n    console.log(search_string);\n\n    let ayah = undefined;\n\n    if (search_string.split(':').length >= 2 && Number(search_string.split(':')[1])) {\n      console.log(Number('') ? true : false);\n      if (this.validateInput(search_string.split(':')[1])) {\n        ayah = search_string.split(':')[1];\n        this.setState({\n          // selSurahNumber: sur,\n          preloader: true,\n          inputVal: ayah,\n        }, () => this.searchForAyah());\n      } else {\n        this.setState({\n          // selSurahNumber: sur,\n          preloader: false\n        });\n        console.log('Error: Ayah Number Invalid!');\n      }\n    } else {\n      this.setState({\n        // selSurahNumber: sur,\n        preloader: true,\n        inputVal: '1',\n      }, () => this.searchForAyah());\n      console.log('Showing up first Ayah!');\n    }\n    // else -  no search_string in url\n    if (!ayah || ayah === undefined) {\n      this.setState({\n        ayahDetails: {},\n        mainResult: [],\n        preloader: false\n      }, () => this.ayahInput.focus());\n    }\n\n  }\n\n  // fetch surah details from api\n  fetchSurahDetails(dataVal) {\n    let selSurah = undefined; // [];\n    // let temp;\n    if (this.state.surahList && this.state.surahList.length) {\n      selSurah = this.state.surahList.filter(surah => Number(surah.number) === Number(dataVal))[0];\n      // selSurah = temp[0];\n      /* this.setState({\n        selectedSurah: selSurah[0],\n        selSurahNumber: selSurah[0].number\n      }, () => {console.log(this.state.selectedSurah)});*/\n    } else {\n      console.log('Error: Surah List not available!');\n    }\n\n    // console.log(this.state.selectedSurah);\n\n\n    return selSurah;\n\n  }\n\n  // get the language name n details from Langs.json\n  findLang = (array, title) => {\n    let result = array.filter(item => item.code === title);\n    if (result.length) {\n      return result[0];\n    } else {\n      return false;\n    }\n  }\n\n\n\n  // navigate to next & previsous ayahs \n  navigateAyah = (evt) => {\n    let data = evt.target.getAttribute('data-value');\n    let valNow = Number(this.state.inputVal);\n    let totAyahs = Number(this.state.selectedSurah.numberOfAyahs);\n    let navBackClass = this.state.navBtnClass.back;\n    let navNextClass = this.state.navBtnClass.next;\n    switch (data) {\n      case \"back\":\n        if (valNow > 1) {\n          valNow--;\n        }\n        break;\n      case \"next\":\n        if (valNow < totAyahs) {\n          valNow++;\n        }\n        break;\n\n      default:\n    }\n    if (valNow === 1) {\n      navNextClass = 'nav-btn next';\n      navBackClass = 'nav-btn back disabled';\n    } else {\n      navBackClass = 'nav-btn back';\n      if (this.state.selSurahNumber > 0 && valNow === this.state.selectedSurah.numberOfAyahs) {\n        navNextClass = 'nav-btn next disabled';\n      } else {\n        navNextClass = 'nav-btn next';\n      }\n    }\n    this.setState({\n      inputVal: String(valNow),\n      navBtnClass: { back: navBackClass, next: navNextClass }\n    }, () => this.searchForAyah());\n\n  }\n\n  /*onChangeHandler(e) {\n    this.setState({\n      filterInput: e.target.value,\n    })\n    let chapts = this.state.surahList;\n    console.log(e.target.value);\n    let temp = [];\n    var newArray = chapts.filter((d) => {\n      //console.log(d);\n      temp = Object.values(d);\n      return temp.filter(item => String(item).substr(0, e.target.value.length) === e.target.value);\n      \n    });\n    console.log(newArray)\n    \n\n  }*/\n  render() {\n    let listview;\n    // url is 'https://www.example.com/user?id=123&type=4';\n\n    /*let default_trans = trans_conf.filter(item => item.active === '1');\n\n    if(default_trans.length){\n\n    }*/\n\n    if (this.state.mainResult.length) {\n      listview = <Listview\n        key={this.state.ayahDetails && this.state.number}\n        results={this.state.mainResult}\n        details={this.state.ayahDetails}\n      />\n    }\n    const surahs = this.state.surahList;\n    const selectedSurah = this.state.selectedSurah;\n    let share_url = '';\n\n\n    if (selectedSurah && this.state.inputVal) {\n      share_url = this.state.url_origin + '?' + selectedSurah.number + ':' + this.state.inputVal;\n      console.log(share_url);\n\n    }\n    \n\n    const SurahIndex = () => (\n\n      <div className=\"surahlist-container\">\n        <h3>Surah Index</h3>\n\n        <ul className=\"surah-list-ul\">\n          <li className=\"row-flex list-heads\">\n            <p className=\"sno\" >&nbsp;</p>\n            <p className=\"sname\">Surah Name</p>\n            <p className=\"sno\">No</p>\n          </li>\n          {\n            surahs\n              .map(surah => <li key={surah.number} value={surah.number} className=\"row-flex\" onClick={this.selectSurah}>\n\n                <span data-value={surah.number} className=\"sno\">&nbsp;</span>\n                <div className=\"surahname-wrapper col-flex\">\n                  <p data-value={surah.number} className=\"sname-ar\">{surah.name}</p>\n                  <p data-value={surah.number} className=\"sname\">\n                    <span data-value={surah.number} className=\"blue-text\">{surah.englishNameTranslation}</span> | {surah.englishName}\n                  </p>\n                  <p data-value={surah.number} className=\"sname lighter blue-label\">Ayahs: <strong>{surah.numberOfAyahs}</strong></p>\n                </div>\n                <span data-value={surah.number} className=\"sno\">{surah.number}</span>\n\n\n\n              </li>)\n          }\n        </ul>\n      </div>\n\n\n    )\n\n    const SurahPopup = () => (\n      <Popup\n        trigger={<button value=\"Surahs\" className=\"surah-button\">Surah</button>}\n        on=\"click\"\n        position=\"center center\"\n        modal\n        closeOnDocumentClick\n        className=\"surah-popup\"\n        onRequestClose={() => {\n          this.setState({ modalIsOpen: false });\n        }}\n      >\n        <div className=\"popup-wrapper\">\n          <h3>Select Surah: </h3>\n          <ul className=\"surah-list-ul\">\n            <li className=\"row-flex list-heads\">\n              <p className=\"sno\" >No.</p>\n              <p className=\"sname\">Surah Name</p>\n              <p className=\"sayah\">Ayahs</p>\n\n            </li>\n            {\n              surahs.map(surah => <li key={surah.number} value={surah.number} className=\"row-flex\" onClick={this.selectSurah}>\n\n\n                <span data-value={surah.number} className=\"sno\">{surah.number}</span>\n                <span data-value={surah.number} className=\"sname\">{surah.englishName}</span>\n                <span data-value={surah.number} className=\"sayah\">{surah.numberOfAyahs}</span>\n\n\n\n              </li>)\n            }\n          </ul>\n        </div>\n      </Popup>\n    )\n\n\n    return (\n      <div className=\"page-wrapper\">\n        { /*\n          this.showHelp &&  \n          <div className=\"fader-wrapper\"></div>\n          */\n        }\n        \n        <header className=\"App-header\">\n          <h1 onClick={this.resetView}>\n            Q-Search\n            </h1>\n          {\n            /*(share_url !== '') &&\n            <SharePopup />*/\n          }\n         {/*  <button value=\"?\" onClick={this.openHelp(true)} >?</button> */}\n        </header>\n        {\n          selectedSurah.number &&\n\n          <SurahInfo\n            details={this.state.ayahDetails}\n            onNavNext={this.navigateAyah}\n            onNavBack={this.navigateAyah}\n            selectedSurah={selectedSurah}\n            totalAyahs={this.state.totalQuranAyahs}\n            navBackClass={this.state.navBtnClass.back}\n            navNextClass={this.state.navBtnClass.next}\n            inputVal={this.state.inputVal}\n            refreshData={this.processData}\n            selectedTrans={this.state.defaultTrans}\n            selectTrans={this.selectTranslation}\n          />\n        }\n        {\n          !selectedSurah.number &&\n          <SurahIndex />\n        }\n        <section className={this.state.searchBlockClass} id=\"search-block\">\n          <div className=\"row-flex ayah-input-wrapper\" >\n            <div className=\"row-flex surah-select-wrapper\" >\n              <div className=\"help-bubble left bottom\" onClick={() => this.closeBubble} hidden >\n                <p>Tap to select Surah here.</p>\n              </div>\n              {selectedSurah.number &&\n                <SurahPopup />\n              }\n\n              {this.state.selSurahNumber > 0 &&\n                <p ref={(sur) => { this.surahLabel = sur; }} className=\"surah-name\">{this.state.selSurahNumber}: </p>\n              }\n            </div>\n            <div className=\"ayah-input\">\n              <label hidden>Ayah Number: </label>\n              <input type=\"number\"\n                value={this.state.inputVal}\n                onChange={evt => this.updateInputVal(evt)}\n                onKeyDown={evt => this.verifyInputKey(evt)}\n                placeholder=\"Ayah No.\"\n                ref={(input) => { this.ayahInput = input; }}\n                className=\"input-ayah\"\n                pattern=\"^[0-9]*$\"\n                min=\"1\"\n                max={this.state.selectedSurah.numberOfAyahs}\n              />\n\n              <label ref={(sur) => { this.surahLabel = sur; }} className=\"ayah-total\">of {this.state.selectedSurah.numberOfAyahs ? this.state.selectedSurah.numberOfAyahs : 6236}</label>\n\n            </div>\n            <button onClick={this.searchForAyah} className={this.state.searchBtnClass} value=\"Search\" >Search</button>\n          </div>\n        </section>\n        <div className='content-wrapper'>\n          {listview}\n\n        </div>\n\n        {this.state.preloader &&\n          <Loader />\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}