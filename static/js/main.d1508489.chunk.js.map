{"version":3,"sources":["components/Listview/Listview.js","components/Loader/Loader.js","modules/SurahInfo/SurahInfo.js","App.js","serviceWorker.js","index.js"],"names":["getLangName","code","lang","Langs","filter","item","console","log","name","nativeName","Listview","props","results","details","react_default","a","createElement","className","List_default","component","disablePadding","dense","map","value","index","ListItem_default","key","ListItemText_default","edition","type","language","controls","src","audio","text","Loader","chkTrans","filteredLangs","popupStatus","selectedTrans","LangPopup","selectLangClass","showSelectLang","onClick","onChange","evt","target","lng","eng","mal","translations","english","malayalam","array","title","result","length","findLang","processData","selectLang","id","SurahInfo","navBack","onNavBack","selectedSurah","navNext","onNavNext","navNextClass","navBackClass","refreshData","inputVal","nextBtnText","backBtnClass","backBtnText","englishName","englishNameTranslation","ayahNumber","href","data-value","number","SurahInfo_LangPopup","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectSurah","getAttribute","dataVal","setState","preloader","fetchSurahDetails","Number","navigateAyah","data","valNow","state","totAyahs","numberOfAyahs","navBtnClass","back","next","selSurahNumber","String","searchForAyah","mainResult","ayahDetails","rawData","surahList","searchError","searchBlockClass","langIsOpen","q_edition_ar","q_edition_trans","q_edition_audio","searchBtnClass","handleLoad","bind","assertThisInitialized","resetView","langPopupOnOpen","_this2","window","addEventListener","Surahs","isValid","event","_this3","q_editions","isRefValid","validateInput","split","url","options","cacheKey","cached","sessionStorage","getItem","response","Response","Blob","Promise","resolve","fetch","then","ct","headers","get","match","clone","content","setItem","cachedFetch","res","json","surah","numberInSurah","catch","_this4","filteredItem","flag","push","assign","hizbQuarter","juz","manzil","page","ruku","sajda","searchBtn","_this5","keyCode","_this6","selSurah","ayahInput","focus","listview","_this7","components_Listview_Listview","surahs","location","SurahInfo_SurahInfo","langPopupOpen","selectedLang","closeBubble","hidden","reactjs_popup_es","trigger","on","position","modal","closeOnDocumentClick","onRequestClose","modalIsOpen","ref","sur","surahLabel","updateInputVal","onKeyDown","verifyInputKey","placeholder","input","pattern","min","max","role","components_Loader_Loader","React","Component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1508489.chunk.js","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Langs from '../../assets/json/langs.json';\nimport './Listview.scss';\n\n//import Box from '@material-ui/core/Box';\n/*import ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';*/\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n/*import { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';*/\n//import Modal from '@material-ui/core/Modal';\n//import Popup from \"reactjs-popup\";\n//import IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n//import Slide from '@material-ui/core/Slide';\n//import Copier from '../../modules/Copier/Copier';\n\n  const getLangName = (code) => {\n    // function to get the language name from code\n    let lang = Langs.filter(item => item.code === code);\n    console.log(lang);\n    return (lang[0].name !== 'English' ? lang[0].name + ' | ' + lang[0].nativeName : lang[0].name);\n  }\n\n  function Listview(props) {\n    \n    const results = props.results;\n    const details = props.details;\n\n    if(!props.results) return null;\n\n    return (\n      <div className=\"listview-wrapper\">\n        <List component='ul' disablePadding={false} dense={false} className=\"verse-list-ul\">\n          {results.map((value, index) =>\n            <ListItem key={index} className=\"no-padding\">\n              <ListItemText className=\"verse-text\" >\n              { value.edition.type === 'translation' &&\n                <span className=\"ayah-details\">{getLangName(value.edition.language)}</span>\n              }\n\n              { value.edition.language === 'ar' && \n                <audio controls=\"controls\" className=\"q-audio-player\">\n                  <source src={details.audio} type=\"audio/wav\" />\n                  Your browser does not support the <code>audio</code> element. \n                </audio>\n              }\n              <p className={value.edition.language === 'ar'? \"txt-arabic\" :''}>{value.text}</p>\n                \n            </ListItemText>\n          </ListItem>\n          )\n        }\n        </List>\n      </div>\n    )\n  }\n    \nexport default Listview","import React from 'react';\nimport './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loader-wrapper\">\n    <p>Loading...</p>\n  </div>;\n}\n\nexport default Loader;","import React from 'react';\r\n\r\nimport Langs from '../../assets/json/langs.json';\r\n//import Popup from \"reactjs-popup\";\r\n\r\nconst chkTrans = {'english': false, 'malayalam' : false};\r\nconst filteredLangs = Langs.filter(item => item.code === 'en' || item.code === 'ml' );\r\nlet popupStatus = false ;\r\nlet selectedTrans = '';\r\nlet findLang = (array, title) => {\r\n    let result = array.filter(item => item.code === title );\r\n    if(result.length){\r\n    return result[0];\r\n    } else {\r\n    return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst LangPopup =  (props) => {\r\n    console.log(props);\r\n    let selectLangClass = 'hide';\r\n\r\n    let selectLang = evt => {\r\n        //const refreshData = props.refreshData;\r\n        console.log(evt.target);\r\n        let lng = evt.target.value; //getAttribute('data-value');\r\n        let eng = chkTrans.english;\r\n        let mal = chkTrans.malayalam;\r\n        switch (lng){\r\n        case 'en':\r\n            eng = true; //!eng;\r\n            mal = false;\r\n            \r\n            break;\r\n        case 'ml':\r\n            mal = true; //!mal;\r\n            eng = false;\r\n            break;\r\n        default:\r\n        }\r\n        //this.setState({\r\n        props.translations.english = eng;\r\n        props.translations.malayalam = mal; \r\n        popupStatus = false;\r\n        //setPopupStatus(false);\r\n        \r\n        selectedTrans = findLang(Langs,lng);\r\n        props.processData();\r\n        selectLangClass = 'hide';\r\n        console.log(popupStatus);\r\n    }\r\n\r\n      let showSelectLang = () => {\r\n          selectLangClass = 'show';\r\n      }\r\n\r\n      return  <div className='lang-select'>\r\n        <section className='select-value-wrapper'>\r\n            <label onClick={showSelectLang}>Translation: <span>{selectedTrans.nativeName ? selectedTrans.nativeName : 'None'}</span></label>\r\n        </section>\r\n        <select onChange={evt => selectLang(evt)} id='q-lang' className={selectLangClass} onClick={showSelectLang}>\r\n            <option value=\"denied\">None</option>\r\n            {\r\n                filteredLangs.map(lng=> \r\n                    <option value={lng.code} key={lng.code}>{lng.name} - {lng.nativeName}</option>\r\n                )\r\n            }\r\n        \r\n        </select>\r\n       \r\n    </div>\r\n      \r\n}\r\n\r\nfunction SurahInfo (props) {\r\n    //const details = props.details;\r\n    const navBack = props.onNavBack;\r\n    const selectedSurah = props.selectedSurah;\r\n    //const transSelected = props.selectedLang;\r\n    const navNext = props.onNavNext;\r\n    const navNextClass = props.navNextClass;\r\n    const navBackClass = props.navBackClass;\r\n    const refreshData = props.refreshData;\r\n\r\n    //const langPopupOpen = props.langPopupOpen;\r\n    //const onLangChange = props.onSelectLang;\r\n    const chkTrans = props.translations;\r\n    const inputVal = props.inputVal;\r\n    //const onPopupOpen = props.langPopupOnOpen;\r\n\r\n    var nextBtnText = 'Next';\r\n    var backBtnClass = navBackClass;\r\n    var backBtnText = 'Back';\r\n//console.log(props.details.ayahNumber);\r\n    //const filteredLangs = Langs.filter(item => item.code === 'en' || item.code === 'ml' );\r\n\r\n    if(!inputVal){\r\n        nextBtnText = 'First Ayah';\r\n        backBtnText = ' ';\r\n        backBtnClass += ' off';\r\n    } \r\n    \r\n    return(\r\n        <section className=\"titles-wrapper\">\r\n            <h2 className=\"surah-title\">{selectedSurah.englishName} | {selectedSurah.name}</h2>\r\n            \r\n            <p>{selectedSurah.englishNameTranslation}</p>\r\n            \r\n            \r\n            \r\n            <p>Holy Qur'an Ayah No: <span className=\"clearer\">{props.details.ayahNumber}</span> / 60236</p>\r\n\r\n            <div className=\"row-flex ayah-nav-wrapper margin top\">\r\n                <a href=\"javascript:;\" \r\n                    className={backBtnClass} \r\n                    data-value=\"back\" \r\n                    onClick={navBack}\r\n                >\r\n                    {backBtnText}\r\n                </a>\r\n                    <p className=\"ayah-nav-text\">Surah: <span className=\"clearer\">{selectedSurah.number}</span> | Ayah: <span className=\"clearer\">{inputVal ? inputVal : '---'}</span></p>\r\n                <a href=\"javascript:;\" \r\n                    className={navNextClass} \r\n                    data-value=\"next\" \r\n                    onClick={navNext}\r\n                >\r\n                    {nextBtnText}\r\n                </a>\r\n            </div>\r\n            <LangPopup \r\n                processData={refreshData} \r\n                translations={chkTrans} \r\n            />\r\n        </section>\r\n    )\r\n}\r\nexport default SurahInfo;","\nimport React from 'react';\nimport './App.scss';\nimport 'typeface-roboto';\nimport Listview from './components/Listview/Listview';\nimport Loader from './components/Loader/Loader';\nimport Langs from './assets/json/langs.json';\nimport Surahs from './assets/json/SurahList.json';\nimport Popup from \"reactjs-popup\";\nimport SurahInfo from './modules/SurahInfo/SurahInfo';\n\n//import TextField from '@material-ui/core/TextField';\n\n//import PropTypes from 'prop-types';\n//import { withStyles } from '@material-ui/core/styles';\n//import AppBar from '@material-ui/core/AppBar';\n//import Toolbar from '@material-ui/core/Toolbar';\n//import Popover from '@material-ui/core/Popover';\n\n//import Typography from '@material-ui/core/Typography';\n\n//import Button from '@material-ui/core/Button';\n//import Tabs from '@material-ui/core/Tabs';\n//import Tab from '@material-ui/core/Tab';\n\n//import FormGroup from '@material-ui/core/FormGroup';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\n//import Checkbox from '@material-ui/core/Checkbox';\n//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\n//import Favorite from '@material-ui/icons/Favorite';\n//import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n//import Checkbox from './components/Checkbox/Checkbox';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        mainResult: [],\n        inputVal: '',\n        ayahDetails: {},\n        rawData: {},\n        surahList: [],\n        searchError: '',\n        searchBlockClass: 'search-wrapper',\n        selectedSurah: {},\n        selSurahNumber: 0,\n        selectedTrans: '',\n        preloader: true,\n        langIsOpen: false,\n        chkTrans: {'english': false, 'malayalam' : false},\n        q_edition_ar: 'quran-simple-enhanced',\n        q_edition_trans: ['en.asad', 'ml.abdulhameed'], //'en.pickthall', \n        q_edition_audio: 'ar.alafasy',\n        navBtnClass: {'back':'nav-btn back', 'next':'nav-btn next'},\n        searchBtnClass: 'search-btn inactive'\n      }\n      //const langs = JSON.parse('./langs.json');\n      this.handleLoad = this.handleLoad.bind(this);\n      this.processData = this.processData.bind(this);\n      this.resetView = this.resetView.bind(this);\n      this.searchForAyah = this.searchForAyah.bind(this);\n      this.langPopupOnOpen = this.langPopupOnOpen.bind(this);\n    }\n    \n    \n    resetView() {\n      //alert('asdf');\n      this.setState({\n        inputVal: '',\n        ayahDetails: null,\n        mainResult: [],\n        rawData: null,\n        searchError: '',\n        selectedSurah: {},\n        selSurahNumber: 0,\n        langIsOpen: false,\n        selectedTrans: '',\n        chkTrans: {'english': false, 'malayalam' : false}\n      })\n    }\n    componentDidMount() {\n      this.setState({\n         preloader: true\n      }, () => window.addEventListener('load', this.handleLoad));\n    }\n    \n    handleLoad(){\n      //console.log(Langs);\n      /*this.setState({\n         preloader: true\n      });*/\n      \n       this.setState({\n          surahList: Surahs.data,\n          preloader: false\n        });\n    }\n\n    langPopupOnOpen(){\n      this.setState({\n        langIsOpen: true\n      })\n    }\n    validateInput(value){\n      let isValid = true;\n      let totAyahs;\n      //console.log(value);\n      if(this.state.selectedSurah.number){\n        totAyahs = Number(this.state.selectedSurah.numberOfAyahs);\n      }\n      else {\n        totAyahs = 6236;\n      }\n      \n      if(Number(value) > totAyahs){\n        isValid = false;\n      }\n      //console.log(value);\n      return isValid;\n    }\n    searchForAyah(event) {\n      let filter = Number(this.state.inputVal);\n      let q_editions = (this.state.q_edition_ar + ',' + this.state.q_edition_trans + ',' + this.state.q_edition_audio) ;\n      this.setState({\n         preloader: true\n        });\n\n      let isRefValid = this.validateInput(filter);\n    \n      if(!filter || !isRefValid){\n        console.log(this.state.searchError);\n        this.setState({\n         preloader: false\n        });\n        return false;\n      }\n\n\n      if(String(filter).split(':').length <= 1){\n        if(this.state.selSurahNumber > 0){\n          filter = this.state.selSurahNumber + \":\" + filter;\n        } \n      } \n      const cachedFetch = (url, options) => {\n        // Use the URL as the cache key to sessionStorage\n      let cacheKey = url\n      // START new cache HIT code\n      let cached = sessionStorage.getItem(cacheKey)\n      if (cached !== null) {\n        // it was in sessionStorage! Yay!\n        console.log('already cached')\n        let response = new Response(new Blob([cached]));\n        return Promise.resolve(response);\n      }\n      // END new cache HIT code\n      return fetch(url, options).then(response => {\n        // let's only store in cache if the content-type is\n        // JSON or something non-binary\n        let ct = response.headers.get('Content-Type')\n        if (ct && (ct.match(/application\\/json/i) || ct.match(/text\\//i))) {\n          // There is a .json() instead of .text() but\n          // we're going to store it in sessionStorage as\n          // string anyway.\n          // If we don't clone the response, it will be\n          // consumed by the time it's returned. This\n          // way we're being un-intrusive.\n          response.clone().text().then(content => {\n            sessionStorage.setItem(cacheKey, content)\n          })\n        }\n        return response\n        })\n      }\n\n      /*this.setState({\n         preloader: true\n      }, () => {*/\n        cachedFetch('https://api.alquran.cloud/v1/ayah/' + filter + '/editions/' + q_editions)\n          .then(res => res.json())\n          .then((data) => {\n            //console.log(this.state.preloader);\n            //console.log('done...');\n            //console.log(data);\n            this.setState({\n              selectedSurah: data.data[0].surah,\n              selSurahNumber: data.data[0].surah.number,\n              inputVal: data.data[0].numberInSurah,\n              searchError:'',\n              rawData :data\n            }, () => this.processData(data));\n          })\n          .catch(\n            this.setState({\n             preloader: false,\n             searchError: 'data error'\n            })\n          )\n        //}\n      //);\n    }\n    \n     processData(results) {\n      let res = [];\n      let audio = '';\n      let details = null;\n      let result = this.state.rawData;\n      if(!result || !result.data){\n        console.log('no data');\n        return false;\n      }\n      \n        result.data.map(item => {\n            let filteredItem = null;\n            var flag = true;\n            /* separate audio details */\n            if(!item.audio){\n              \n              filteredItem = {'edition': item.edition, 'text': item.text};\n              switch(item.edition.language){\n                case 'en':\n                  flag = this.state.chkTrans.english;\n                  break;\n                case 'ml':\n                  flag = this.state.chkTrans.malayalam;\n                  break;\n                default:\n                  flag = true;\n                  \n              }\n              if(flag){\n                res.push(filteredItem);\n              }\n              flag = true;\n            }\n            else{\n              if(audio === ''){\n                audio = item.audio;\n              }\n            }\n            \n            if(!details){\n\n              details = item.surah;\n              \n              details = Object.assign(details, {\n                'hizbQuarter': item.hizbQuarter,\n                'juz': item.juz,  \n                'manzil': item.manzil,\n                'ayahNumber': item.number,\n                'numberInSurah': item.numberInSurah,\n                'page': item.page,\n                'ruku': item.ruku,\n                'sajda': item.sajda\n              });\n            }\n            return true;\n          }\n        )\n        \n        if(audio){\n          details = Object.assign(details, {'audio': audio});\n        }\n        this.setState({ \n          ayahDetails: details, \n          mainResult: res, \n          preloader: false\n        });\n        return true;\n    }\n    \n    updateInputVal(evt) {\n      let value = evt.target.value;\n      let isValid = this.validateInput(value);\n      let navBackClass = this.state.navBtnClass.back;\n      let navNextClass = this.state.navBtnClass.next; \n      let searchBtn;\n      this.setState({\n        preloader: true\n      })\n      if(isValid){\n        this.setState({\n          inputVal: evt.target.value\n        });\n      } \n\n      if(!Number(value)){\n        searchBtn = 'search-btn inactive';\n      } else {\n        searchBtn = 'search-btn';\n      }\n      if(value <= 1){\n        navNextClass = 'nav-btn next';\n        navBackClass = 'nav-btn back disabled';\n      } else {\n        navBackClass = 'nav-btn back';\n        if(this.state.selSurahNumber > 0 && value === this.state.selectedSurah.numberOfAyahs){\n          navNextClass = 'nav-btn next disabled';\n        } else {\n          navNextClass = 'nav-btn next';\n        }\n      }\n      this.setState({\n        searchBtnClass: searchBtn,\n        navBtnClass: {\n          back: navBackClass,\n          next: navNextClass\n        }\n      })\n\n    }\n    verifyInputKey(evt) {\n      console.log('asdf');\n      if(evt.keyCode === 186) { \n        this.setState({\n          selSurahNumber: evt.target.value,\n          inputVal: '', \n          preloader: true\n        },() => this.fetchSurahDetails(Number(this.state.selSurahNumber)));\n      }\n    }\n\n    selectSurah = (evt) => {\n      console.log(evt.target.value || evt.target.getAttribute('data-value'));\n      let dataVal = evt.target.value || evt.target.getAttribute('data-value');\n      this.setState({\n        preloader: true\n      }, () => this.fetchSurahDetails(Number(dataVal)));\n    }\n    fetchSurahDetails(dataVal){\n      let selSurah = [];\n      if(dataVal > 0){\n        selSurah = this.state.surahList.filter(surah => Number(surah.number) === Number(dataVal));\n        \n        this.setState({\n          selectedSurah: selSurah[0],\n          selSurahNumber: selSurah[0].number\n        }, () => {console.log(this.state.selectedSurah)});\n      }\n      \n      this.setState({ \n        ayahDetails: {},\n        mainResult: [], \n        preloader: false\n      }, () => {this.ayahInput.focus()});\n      \n    }\n/*findLang(array, title) {\n    let result = array.filter(item => item.code === title );\n    if(result.length){\n      return result[0];\n    } else {\n      return false;\n    }\n}*/\n\nnavigateAyah = (evt) => {\n  let data = evt.target.getAttribute('data-value');\n  let valNow = Number(this.state.inputVal);\n  let totAyahs = Number(this.state.selectedSurah.numberOfAyahs); \n  let navBackClass = this.state.navBtnClass.back;\n  let navNextClass = this.state.navBtnClass.next; \n  switch (data){\n    case \"back\":  \n      if(valNow > 1) {\n        valNow--;\n      }\n      break;\n    case \"next\":\n      if(valNow < totAyahs) {\n        valNow++;\n      }\n      break;\n      \n    default:\n  }\n   if(valNow === 1){\n      navNextClass = 'nav-btn next';\n      navBackClass = 'nav-btn back disabled';\n    } else {\n      navBackClass = 'nav-btn back';\n      if(this.state.selSurahNumber > 0 && valNow === this.state.selectedSurah.numberOfAyahs){\n        navNextClass = 'nav-btn next disabled';\n      } else {\n        navNextClass = 'nav-btn next';\n      }\n    }\n  this.setState({\n    inputVal: String(valNow),\n    navBtnClass: {back: navBackClass, next: navNextClass},\n  }, () => this.searchForAyah(evt));\n  \n}\n  render(){\n    let listview;\n// url is 'https://www.example.com/user?id=123&type=4';\n  \n\n    if(this.state.mainResult.length){\n      listview = <Listview \n        key={this.state.ayahDetails && this.state.number} \n        results={this.state.mainResult} \n        details={this.state.ayahDetails}\n        />\n    }\n    const surahs = this.state.surahList;\n    \n    const closeBubble = (evt) => {\n      console.log(evt.target);\n    }\n    const SurahPopup =  () => (\n      <Popup\n        trigger={<a href=\"javascript:;\" value=\"Surahs\" className=\"surah-button\">Surah</a>}\n        on=\"click\"\n        position=\"center center\"\n        modal\n        closeOnDocumentClick\n        className=\"surah-popup\"\n        onRequestClose={() => {\n          this.setState({ modalIsOpen: false });\n        }}\n      >\n      <div className=\"surah-wrapper\">\n        <h3>Select Surah:</h3>\n        <ul className=\"surah-list-ul\">\n          <li className=\"row-flex list-heads\">\n            <p className=\"sno\" >No.</p>\n            <p className=\"sname\">Surah Name</p>\n            <p className=\"sayah\">Ayahs</p>\n          </li>\n        {\n          surahs.map(surah => <li  key={surah.number} value={surah.number} className=\"row-flex\" onClick={this.selectSurah}>\n          \n            <span data-value={surah.number} className=\"sno\">{surah.number}</span>\n            <span data-value={surah.number} className=\"sname\">{surah.englishName}</span>\n            <span data-value={surah.number} className=\"sayah\">{surah.numberOfAyahs}</span>\n          \n          </li>)\n        }\n        </ul>\n      </div>\n      </Popup>\n    )\n    const selectedSurah = this.state.selectedSurah;\n   //alert(this.state.selectedTrans);\nconsole.log(window.location);\n  return (\n    <div className=\"page-wrapper\">\n      <header className=\"App-header\">\n       <h1 onClick={this.resetView}>\n          Q-Search\n       </h1>\n      </header>\n      {\n        selectedSurah.number && \n\n        <SurahInfo \n          details={this.state.ayahDetails} \n          onNavNext={this.navigateAyah} \n          onNavBack ={this.navigateAyah} \n          selectedSurah ={selectedSurah}\n          navBackClass = {this.state.navBtnClass.back}\n          navNextClass = {this.state.navBtnClass.next}\n          langPopupOpen = {this.state.langIsOpen}\n          selectedLang = {this.state.selectedTrans}\n          translations = {this.state.chkTrans}\n          inputVal = {this.state.inputVal}\n          langPopupOnOpen = {this.langPopupOnOpen}\n          refreshData = {this.processData}\n          />\n      }\n        <section className={this.state.searchBlockClass} id=\"search-block\">\n        <div className=\"row-flex ayah-input-wrapper\" >\n          <div className=\"row-flex surah-select-wrapper\" >\n            <div className=\"help-bubble left bottom\" onClick={(evt) => this.closeBubble} hidden >\n              <p>Tap to select Surah here.</p>\n            </div>\n            <SurahPopup />\n            \n            {this.state.selSurahNumber > 0 && \n              <p ref={(sur) => { this.surahLabel = sur; }} className=\"surah-name\">{this.state.selSurahNumber}:</p>\n            }\n          </div>\n          <div className=\"ayah-input\">\n            <label hidden>Ayah Number:</label>\n            <input type=\"number\"\n              value={this.state.inputVal}\n              onChange={evt =>this.updateInputVal(evt)}\n              onKeyDown={evt => this.verifyInputKey(evt)}\n              placeholder=\"Ayah No.\"\n              ref={(input) => { this.ayahInput = input; }} \n              className=\"input-ayah\"\n              pattern=\"^[0-9]*$\"\n              min=\"1\"\n              max={this.state.selectedSurah.numberOfAyahs}\n            />\n            \n              <label ref={(sur) => { this.surahLabel = sur; }} className=\"ayah-total\">of {this.state.selectedSurah.numberOfAyahs ? this.state.selectedSurah.numberOfAyahs : 6236 }</label>\n            \n          </div>\n          <a href=\"javascript:;\" onClick={this.searchForAyah} role=\"button\" className={this.state.searchBtnClass}>Search</a>\n          \n         </div> \n        </section>\n      <div className='content-wrapper'>\n        {listview}\n         \n      </div>\n      \n      { this.state.preloader && \n        <Loader />\n        \n      }\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}