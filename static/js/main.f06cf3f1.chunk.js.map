{"version":3,"sources":["components/Listview/Listview.js","App.js","serviceWorker.js","index.js"],"names":["Listview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","console","log","onClickNavigate","evt","curAyah","details","numberInSurah","surah","number","totAyah","numberOfAyahs","target","value","state","results","react_default","a","createElement","className","hidden","onClick","ayahNumber","reactjs_popup_es","trigger","on","position","closeOnDocumentClick","name","englishName","englishNameTranslation","List_default","component","disablePadding","dense","map","index","ListItem_default","key","ListItemText_default","edition","type","language","text","controls","src","audio","React","Component","App","event","filter","inputVal","fetch","then","res","json","data","searchError","setState","rawData","searchBlockClass","processData","catch","updateInputVal","chkSelectChange","chkTrans","english","malayalam","status","mainResult","ayahDetails","result","_this2","item","filteredItem","flag","push","assign","hizbQuarter","juz","manzil","page","ruku","sajda","listview","_this3","length","components_Listview_Listview","AppBar_default","color","Toolbar_default","Typography_default","variant","size","id","TextField_default","label","placeholder","defaultValue","margin","autoFocus","onChange","fullWidth","FormGroup_default","row","FormControlLabel_default","control","Checkbox_default","labelPlacement","checked","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06cf3f1.chunk.js","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\n//import Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\n/*import ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';*/\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n/*import { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';*/\n//import Modal from '@material-ui/core/Modal';\nimport Popup from \"reactjs-popup\";\n\nimport IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n//import Slide from '@material-ui/core/Slide';\nimport './Listview.scss';\n\n//import Copier from '../../modules/Copier/Copier';\n\n  class Listview extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n      }\n    }\n    componentWillUnmount = () => {\n        console.log('asdf');\n    }\n    onClickNavigate = (evt) => {\n      let curAyah = this.props.details.numberInSurah;\n      let surah = this.props.details.number;\n      let totAyah = this.props.details.numberOfAyahs;\n      \n      /*console.log(curAyah);\n      console.log(surah);\n      console.log(totAyah);*/\n      switch(evt.target.value){\n        case \"Next\":\n          if(curAyah < totAyah){\n            curAyah++;\n          } else {\n            if(surah < 114){\n              surah++;\n              curAyah = 1;\n            } else {\n              console.log('You are on the last Ayah of the last Surah');\n            }\n          }\n          console.log(surah + ':' + curAyah);\n          //curAyah = this.props.details.numberOfAyahs\n          break;\n        case \"Prev\":\n          if(curAyah > 1){\n            curAyah--;\n          } else {\n            if(surah > 1){\n              surah--;\n            } else {\n              console.log('You are on the first Ayah of the first Surah');\n            }\n          }\n          console.log(surah + ':' + curAyah);\n          break;\n        default:\n          console.log('asd');\n          break;\n      }\n    }\n    render () {\n      //console.log(this.props);\n      const results = this.props.results;\n      const details = this.props.details;\n      console.log(details);\n      const PopupOnFocus =  () => (\n        <Popup\n          trigger={<button value=\"More Info\">More Info</button>}\n          on=\"click\"\n          position=\"left center\"\n          closeOnDocumentClick\n        >\n        <div><center>\n          <h2>{details.name}</h2>\n          <p>{details.englishName} | {details.englishNameTranslation}</p>\n           <p>Surah: {details.number} | Ayah: {details.numberInSurah}</p>\n           \n          </center>\n        </div>\n        </Popup>\n      )\n      \n      \n      /*<ListItemSecondaryAction>\n            <IconButton hidden edge=\"end\" aria-label=\"Comments\">\n              \n            </IconButton>\n          \n          </ListItemSecondaryAction>*/\n          \n    return (\n      <div className=\"listview-wrapper\">\n      <button hidden onClick={this.onClickNavigate} value=\"Prev\" >prev</button>\n      \n      <section className=\"titles-wrapper\">\n        <p>In Qur'an: <span>{details.ayahNumber}</span><br />In Surah: <span>{details.number}:{details.numberInSurah}</span></p>\n        \n        <PopupOnFocus />\n      </section>\n        <button hidden onClick={this.onClickNavigate} value=\"Next\" >next</button>\n        <List component='ul' disablePadding={false} dense={false} >\n          {results.map((value, index) =>\n            <ListItem key={index} className=\"no-padding\">\n              <ListItemText className=\"verse-text\" >\n              { value.edition.type === 'translation' &&\n                <span className=\"ayah-details\">{value.edition.englishName}</span>\n              }\n                <p className={value.edition.language === 'ar'? \"txt-arabic\" :''}>{value.text}</p>\n                  { value.edition.language === 'ar' && \n                    <center>\n                      <audio controls=\"controls\">\n                        <source src={details.audio} type=\"audio/wav\" />\n                        Your browser does not support the <code>audio</code> element. \n                      </audio>\n                    </center>\n                  }\n              </ListItemText>\n            </ListItem>\n            )\n          }\n          \n        </List>\n        \n      </div>\n    )\n    }\n\n  }  ;\n \nexport default Listview","\nimport React from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\nimport 'typeface-roboto';\nimport TextField from '@material-ui/core/TextField';\n\n//import PropTypes from 'prop-types';\n//import { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Popover from '@material-ui/core/Popover';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\n//import Tabs from '@material-ui/core/Tabs';\n//import Tab from '@material-ui/core/Tab';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\n//import Favorite from '@material-ui/icons/Favorite';\n//import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport Listview from './components/Listview/Listview';\n\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        mainResult: [],\n        inputVal: '',\n        ayahDetails: {},\n        rawData: {},\n        searchError: false,\n        searchBlockClass: 'search-wrapper',\n        chkTrans: {'english': false, 'malayalam' : false}\n      }\n    }\n    \n    \n    onClick = (event) => {\n      \n      const filter = this.state.inputVal;\n      \n      fetch('http://api.alquran.cloud/v1/ayah/' + filter + '/editions/quran-simple-enhanced,en.asad,en.pickthall,ml.abdulhameed,ar.alafasy')\n      .then(res => res.json())\n      .then((data) => {\n        //console.log(data)\n        this.state.searchError = false;\n        this.setState({rawData :data});\n        this.state.searchBlockClass='search-wrapper shrink';\n        //this.setState({ mainResult: this.processData(data)});\n        this.processData(data);\n        \n        \n      })\n      .catch(console.log)\n    }\n    \n     processData(result) {\n      let res = [];\n      let audio = '';\n      let details = null;\n      \n      this.setState({ \n        ayahDetails: {},\n        mainResult: []\n      });\n      result.data.map(item => {\n          let filteredItem = null;\n          var flag = true;\n          /* separate audio details */\n          if(!item.audio){\n            \n            filteredItem = {'edition': item.edition, 'text': item.text};\n            switch(item.edition.language){\n              case 'en':\n                flag = this.state.chkTrans.english;\n                break;\n              case 'ml':\n                flag = this.state.chkTrans.malayalam;\n                break;\n            }\n            //console.log(flag);\n            //console.log(this.state.chkTrans.english);\n            //console.log(this.state.chkTrans.malayalam);\n            if(flag){\n              //console.log('true----');\n              res.push(filteredItem);\n            }\n            flag = true;\n          }\n          else{\n            if(audio === ''){\n              audio = item.audio;\n            }\n          }\n          \n          if(!details){\n\n            details = item.surah;\n            \n            details = Object.assign(details, {\n              'hizbQuarter': item.hizbQuarter,\n              'juz': item.juz,  \n              'manzil': item.manzil,\n              'ayahNumber': item.number,\n              'numberInSurah': item.numberInSurah,\n              'page': item.page,\n              'ruku': item.ruku,\n              'sajda': item.sajda\n            });\n          }\n        }\n      )\n      if(audio){\n        details = Object.assign(details, {'audio': audio});\n      }\n      //console.log(res);\n      //console.log(details);\n      this.setState({ ayahDetails: details});\n      this.setState({ mainResult: res});\n      \n    }\n    \n    updateInputVal = (evt) => {\n      this.setState({\n        inputVal: evt.target.value\n      });\n    }\n    \n  chkSelectChange = (evt) => {\n    switch(evt.target.value){\n       case \"eng\":\n        this.state.chkTrans.english = !this.state.chkTrans.english;\n        break;\n       case \"mlm\":\n        this.state.chkTrans.malayalam = !this.state.chkTrans.malayalam;\n        break;\n    }\n    if(this.state.rawData.status && this.state.rawData.status === 'OK'){\n      this.processData(this.state.rawData);\n    }\n  }\n\n  render(){\n    /* <Button onClick={this.onClick} size='medium' variant='contained' fullWidth={false}>\n            Search\n          </Button> */\n    let listview;\n    if(this.state.mainResult.length){\n      listview = <Listview results={this.state.mainResult} details={this.state.ayahDetails}/>\n    } else {\n      if(this.state.searchError) {\n        listview = <p className='error-txt'>The Referrence entered is Invalid</p>\n      }\n    }\n  return (\n    <div className=\"page-wrapper\">\n      <header>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h1\" size=\"small\" color=\"inherit\">\n              Q-Search\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </header>\n      \n      <div className='content-wrapper'>\n        <section className={this.state.searchBlockClass} id=\"search-block\">\n        \n          <TextField\n            id=\"standard-error\"\n            label=\"Enter your search reference (E.g. 2.263)\"\n            placeholder=\"Enter search\"\n            defaultValue={this.state.inputVal}\n            margin=\"normal\"\n            autoFocus={true}\n            onChange={evt =>this.updateInputVal(evt)}\n            fullWidth={true}\n          />\n          \n         \n          <FormGroup row>\n          \n            <p><strong>Trans: &nbsp;</strong></p>\n            <FormControlLabel\n              value=\"eng\"\n              control={<Checkbox color=\"primary\" />}\n              label=\"English\"\n              labelPlacement=\"end\"\n              checked={this.state.chkTrans.english}\n              onChange={evt => this.chkSelectChange(evt)}\n            />\n            <FormControlLabel\n              value=\"mlm\"\n              control={<Checkbox color=\"primary\" />}\n              label=\"Malayalam\"\n              labelPlacement=\"end\"\n              checked={this.state.chkTrans.malayalam}\n              onChange={evt => this.chkSelectChange(evt)}\n              \n            />\n            <button onClick={this.onClick} value=\"Search\" >Search</button>\n          </FormGroup>\n        </section>\n        {listview}\n      </div>\n      \n      \n           \n    </div>\n  );\n  }\n}\n//onChange={handleChange('checkedF')}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}