{"version":3,"sources":["components/Listview/Listview.js","components/Loader/Loader.js","App.js","serviceWorker.js","index.js"],"names":["Listview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","console","log","onClickNavigate","evt","curAyah","details","numberInSurah","surah","number","totAyah","numberOfAyahs","target","value","state","code","lang","Langs","filter","item","name","nativeName","_this2","results","react_default","a","createElement","className","hidden","onClick","List_default","component","disablePadding","dense","map","index","ListItem_default","key","ListItemText_default","edition","type","getLangName","language","controls","src","audio","text","React","Component","Loader","App","updateInputVal","isValid","validateInput","setState","inputVal","verifyInputKey","keyCode","selSurahNumber","preloader","fetchSurahDetails","Number","selectSurah","getAttribute","dataVal","selectLang","lng","eng","chkTrans","english","mal","malayalam","rawData","data","processData","navigateAyah","valNow","totAyahs","selectedSurah","String","searchForAyah","mainResult","ayahDetails","surahList","searchError","searchBlockClass","selectedTrans","q_edition_ar","q_edition_trans","q_edition_audio","handleLoad","bind","assertThisInitialized","resetView","window","addEventListener","Surahs","fetch","then","res","json","catch","event","_this3","q_editions","isRefValid","split","length","splitV","curSurah","result","_this4","filteredItem","flag","push","assign","hizbQuarter","juz","manzil","ayahNumber","page","ruku","sajda","_this5","selSurah","ayahInput","focus","array","title","listview","_this6","components_Listview_Listview","surahs","filteredLangs","englishName","englishNameTranslation","reactjs_popup_es","trigger","href","on","position","modal","closeOnDocumentClick","data-value","id","ref","sur","surahLabel","onChange","onKeyDown","placeholder","input","pattern","min","max","role","components_Loader_Loader","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oSAoJeA,qBA/HX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,qBAAuB,WACnBC,QAAQC,IAAI,SAPGT,EAUnBU,gBAAkB,SAACC,GACjB,IAAIC,EAAUZ,EAAKD,MAAMc,QAAQC,cAC7BC,EAAQf,EAAKD,MAAMc,QAAQG,OAC3BC,EAAUjB,EAAKD,MAAMc,QAAQK,cAGjC,OAAOP,EAAIQ,OAAOC,OAChB,IAAK,OACAR,EAAUK,EACXL,IAEGG,EAAQ,KACTA,IACAH,EAAU,GAEVJ,QAAQC,IAAI,8CAGhBD,QAAQC,IAAIM,EAAQ,IAAMH,GAE1B,MACF,IAAK,OACAA,EAAU,EACXA,IAEGG,EAAQ,EACTA,IAEAP,QAAQC,IAAI,gDAGhBD,QAAQC,IAAIM,EAAQ,IAAMH,GAC1B,MACF,QACEJ,QAAQC,IAAI,SA1ChBD,QAAQC,IAAIT,EAAKD,OACjBC,EAAKqB,MAAQ,GAHIrB,2EAgDNsB,GACL,IAAIC,EAAOC,EAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKJ,OAASA,IAE9C,OADAd,QAAQC,IAAIc,GACa,YAAjBA,EAAK,GAAGI,KAAqBJ,EAAK,GAAGI,KAAO,MAAQJ,EAAK,GAAGK,WAAaL,EAAK,GAAGI,sCAEvF,IAAAE,EAAA1B,KAEF2B,EAAU3B,KAAKJ,MAAM+B,QACrBjB,EAAUV,KAAKJ,MAAMc,QAE3B,IAAIV,KAAKJ,MAAM+B,QAAS,OAAO,KAgCjC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,UAAQE,QAAM,EAACC,QAASjC,KAAKO,gBAAiBU,MAAM,QAApD,QAGEW,EAAAC,EAAAC,cAAA,UAAQE,QAAM,EAACC,QAASjC,KAAKO,gBAAiBU,MAAM,QAApD,QACAW,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAMM,UAAU,KAAKC,gBAAgB,EAAOC,OAAO,EAAON,UAAU,iBACjEJ,EAAQW,IAAI,SAACrB,EAAOsB,GAAR,OACXX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAUY,IAAKF,EAAOR,UAAU,cAC9BH,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAcE,UAAU,cACC,gBAAvBd,EAAM0B,QAAQC,MACdhB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBL,EAAKmB,YAAY5B,EAAM0B,QAAQG,WAGpC,OAA3B7B,EAAM0B,QAAQG,UAERlB,EAAAC,EAAAC,cAAA,SAAOiB,SAAS,WAAWhB,UAAU,kBACnCH,EAAAC,EAAAC,cAAA,UAAQkB,IAAKtC,EAAQuC,MAAOL,KAAK,cADnC,qCAEoChB,EAAAC,EAAAC,cAAA,qBAFpC,aAMNF,EAAAC,EAAAC,cAAA,KAAGC,UAAsC,OAA3Bd,EAAM0B,QAAQG,SAAmB,aAAc,IAAK7B,EAAMiC,mBAjH/DC,IAAMC,mBCRhBC,MARf,WAGE,OAAOzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACpBH,EAAAC,EAAAC,cAAA,iCCslBWwB,cA3jBX,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACjBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KA6RR2D,eAAiB,SAAC/C,GAChB,IAAIS,EAAQT,EAAIQ,OAAOC,MACnBuC,EAAU3D,EAAK4D,cAAcxC,GACjCZ,QAAQC,IAAIE,EAAIQ,OAAOC,OACpBuC,GACD3D,EAAK6D,SAAS,CACZC,SAAUnD,EAAIQ,OAAOC,SApSRpB,EAwSnB+D,eAAiB,SAACpD,GACG,MAAhBA,EAAIqD,SACLhE,EAAK6D,SAAS,CACZI,eAAgBtD,EAAIQ,OAAOC,MAC3B0C,SAAU,GACVI,WAAW,GACX,kBAAMlE,EAAKmE,kBAAkBC,OAAOpE,EAAKqB,MAAM4C,oBA9SlCjE,EAkTnBqE,YAAc,SAAC1D,GACbH,QAAQC,IAAIE,EAAIQ,OAAOC,OAAST,EAAIQ,OAAOmD,aAAa,eACxD,IAAIC,EAAU5D,EAAIQ,OAAOC,OAAST,EAAIQ,OAAOmD,aAAa,cAC1DtE,EAAK6D,SAAS,CACZK,WAAW,GACV,kBAAMlE,EAAKmE,kBAAkBC,OAAOG,OAvTtBvE,EA6UnBwE,WAAa,SAAA7D,GACXH,QAAQC,IAAIE,EAAIQ,OAAOmD,aAAa,eAEpC,IAAIG,EAAM9D,EAAIQ,OAAOmD,aAAa,cAC9BI,EAAM1E,EAAKqB,MAAMsD,SAASC,QAC1BC,EAAM7E,EAAKqB,MAAMsD,SAASG,UAC9B,OAAQL,GACN,IAAK,KACHC,GAAM,EACNG,GAAM,EACN,MACF,IAAK,KACHA,GAAM,EACNH,GAAM,EAIV1E,EAAK6D,SAAS,CACZc,SAAS,CACPC,QAASF,EACTI,UAAWD,IAEZ,WACE7E,EAAKqB,MAAM0D,SAAW/E,EAAKqB,MAAM0D,QAAQC,MAC1ChF,EAAKiF,YAAYjF,EAAKqB,MAAM0D,YArWf/E,EAwXvBkF,aAAe,SAACvE,GAEd,IAAIqE,EAAOrE,EAAIQ,OAAOmD,aAAa,cAC/Ba,EAASf,OAAOpE,EAAKqB,MAAMyC,UAC3BsB,EAAWhB,OAAOpE,EAAKqB,MAAMgE,cAAcnE,eAC/C,OAAQ8D,GACN,IAAK,OACAG,EAAS,GACVA,IAEF,MACF,IAAK,OACAA,EAASC,GACVD,IAKNnF,EAAK6D,SAAS,CACZC,SAAUwB,OAAOH,IAChB,kBAAMnF,EAAKuF,cAAc5E,MA1YxBX,EAAKqB,MAAQ,CACXmE,WAAY,GACZ1B,SAAU,GACV2B,YAAa,GACbV,QAAS,GACTW,UAAW,GACXC,YAAa,GACbC,iBAAkB,iBAClBP,cAAe,GACfpB,eAAgB,EAChB4B,cAAe,GACf3B,WAAW,EACXS,SAAU,CAACC,SAAW,EAAOE,WAAc,GAC3CgB,aAAc,wBACdC,gBAAiB,CAAC,UAAW,eAAgB,kBAC7CC,gBAAiB,cAGnBhG,EAAKiG,WAAajG,EAAKiG,WAAWC,KAAhBjG,OAAAkG,EAAA,EAAAlG,CAAAD,IAElBA,EAAKoG,UAAYpG,EAAKoG,UAAUF,KAAfjG,OAAAkG,EAAA,EAAAlG,CAAAD,IACjBA,EAAKuF,cAAgBvF,EAAKuF,cAAcW,KAAnBjG,OAAAkG,EAAA,EAAAlG,CAAAD,IAvBJA,2EA6BjBG,KAAK0D,SAAS,CACZC,SAAU,GACV2B,YAAa,KACbD,WAAY,GACZT,QAAS,KACTY,YAAa,GACbN,cAAe,GACfpB,eAAgB,EAChB4B,cAAe,GACf3B,WAAW,EACXS,SAAU,CAACC,SAAW,EAAOE,WAAc,iDAI7CuB,OAAOC,iBAAiB,OAAQnG,KAAK8F,iDAMrC9F,KAAK0D,SAAS,CACXK,WAAW,IAGb/D,KAAK0D,SAAS,CACX6B,UAAWa,EAAOvB,KAClBd,WAAW,8CA0BC,IAAArC,EAAA1B,KACZsB,EAAStB,KAAKkB,MAAMyC,SAIxB0C,MAAM,qCAAuC/E,EAAS,kFACnDgF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACzB,GACLnD,EAAKgC,SAAS,CACZ8B,YAAY,GACZZ,QAASC,EACTY,iBAAiB,0BAEnBpF,QAAQC,IAAIuE,GACZnD,EAAKoD,YAAYD,KAGlB4B,MACCzG,KAAK0D,SAAS,CACbK,WAAW,EACXyB,YAAa,+CAKNvE,GAGZ,IACIuC,GAAU,EAcd,OAZAnD,QAAQC,IAAIW,GAQTA,GAPAjB,KAAKkB,MAAMgE,cAAcrE,OACfoD,OAAOjE,KAAKkB,MAAMgE,cAAcnE,eAGhC,QAIXyC,GAAU,GAEZnD,QAAQC,IAAIW,GACLuC,wCAGKkD,GAAO,IAAAC,EAAA3G,KAEnBK,QAAQC,IAAIN,KAAKkB,MAAM6C,WACvB,IAAIzC,EAAS2C,OAAOjE,KAAKkB,MAAMyC,UAC3BiD,EAAc5G,KAAKkB,MAAMyE,aAAe,IAAM3F,KAAKkB,MAAM0E,gBAAkB,IAAM5F,KAAKkB,MAAM2E,gBAG5FgB,EAAa7G,KAAKyD,cAAcnC,GAEpC,IAAIA,IAAWuF,EAKb,OAJAxG,QAAQC,IAAIN,KAAKkB,MAAMsE,aACvBxF,KAAK0D,SAAS,CACbK,WAAW,KAEL,EAGNoB,OAAO7D,GAAQwF,MAAM,KAAKC,QAAU,GAClC/G,KAAKkB,MAAM4C,eAAiB,IAC7BxC,EAAStB,KAAKkB,MAAM4C,eAAiB,IAAMxC,GAc/CtB,KAAK0D,SAAS,CACXK,WAAW,GACX,kBAEDsC,MAAM,qCAAuC/E,EAAS,aAAesF,GAClEN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACzB,GACL8B,EAAKjD,SAAS,CACZ8B,YAAY,GACZZ,QAASC,EACTY,iBAAiB,yBAChB,kBAAMkB,EAAK7B,YAAYD,OAE3B4B,MACCE,EAAKjD,SAAS,CACbK,WAAW,EACXyB,YAAa,wDAMRxC,GACZ,IAEIgE,EAAShH,KAAKkB,MAAMyC,SAASmD,MAAM,KACnCG,EAAWjH,KAAKkB,MAAMgE,cAsB1B,MArBW,SAARlC,EACS,wBAEPgE,EAAOD,OAAS,EACd9C,OAAO+C,EAAO,IAAM,KAAO/C,OAAO+C,EAAO,IAAM,EACtC,0BAEPC,IAAahD,OAAO+C,EAAO,IAAM,GAAK/C,OAAO+C,EAAO,IAAM/C,OAAOgD,EAASlG,gBACjE,6CAA+CkG,EAASlG,cAExD,GAIXkD,OAAO+C,EAAO,IAAM,GAAK/C,OAAO+C,EAAO,IAAM,MACpC,iDAEA,uCAQLE,GAAQ,IAAAC,EAAAnH,KACfuG,EAAM,GACNtD,EAAQ,GACRvC,EAAU,KAmEZ,OAjEFV,KAAK0D,SAAS,CACZ4B,YAAa,GACbD,WAAY,KAKZ6B,EAAOrC,KAAKvC,IAAI,SAAAf,GACZ,IAAI6F,EAAe,KACfC,GAAO,EAEX,GAAI9F,EAAK0B,MAoBM,KAAVA,IACDA,EAAQ1B,EAAK0B,WArBF,CAGb,OADAmE,EAAe,CAACzE,QAAWpB,EAAKoB,QAASO,KAAQ3B,EAAK2B,MAC/C3B,EAAKoB,QAAQG,UAClB,IAAK,KACHuE,EAAOF,EAAKjG,MAAMsD,SAASC,QAC3B,MACF,IAAK,KACH4C,EAAOF,EAAKjG,MAAMsD,SAASG,UAC3B,MACF,QACE0C,GAAO,EAGRA,GACDd,EAAIe,KAAKF,GAEXC,GAAO,EAuBT,OAfI3G,IAEFA,EAAUa,EAAKX,MAEfF,EAAUZ,OAAOyH,OAAO7G,EAAS,CAC/B8G,YAAejG,EAAKiG,YACpBC,IAAOlG,EAAKkG,IACZC,OAAUnG,EAAKmG,OACfC,WAAcpG,EAAKV,OACnBF,cAAiBY,EAAKZ,cACtBiH,KAAQrG,EAAKqG,KACbC,KAAQtG,EAAKsG,KACbC,MAASvG,EAAKuG,UAGX,IAIR7E,IACDvC,EAAUZ,OAAOyH,OAAO7G,EAAS,CAACuC,MAASA,KAE7CjD,KAAK0D,SAAS,CACZ4B,YAAa5E,EACb2E,WAAYkB,EACZxC,WAAW,KAIN,4CA+BOK,GAAQ,IAAA2D,EAAA/H,KACpBgI,EAAW,GACZ5D,EAAU,IACX4D,EAAWhI,KAAKkB,MAAMqE,UAAUjE,OAAO,SAAAV,GAAK,OAAIqD,OAAOrD,EAAMC,UAAYoD,OAAOG,KAEhFpE,KAAK0D,SAAS,CACZwB,cAAe8C,EAAS,GACxBlE,eAAgBkE,EAAS,GAAGnH,QAC3B,WAAOR,QAAQC,IAAIyH,EAAK7G,MAAMgE,kBAInClF,KAAK0D,SAAS,CACZ4B,YAAa,GACbD,WAAY,GACZtB,WAAW,GACV,WAAOgE,EAAKE,UAAUC,2CAoCtBC,EAAOC,GAGV,IAAIlB,EAASiB,EAAM7G,OAAO,SAAAC,GAAI,OAAIA,EAAKJ,OAASiH,IAChD,QAAGlB,EAAOH,QACDG,EAAO,oCA6BZ,IAWFmB,EAXEC,EAAAtI,KAcHA,KAAKkB,MAAMmE,WAAW0B,SACvBsB,EAAWzG,EAAAC,EAAAC,cAACyG,EAAD,CAAU9F,IAAKzC,KAAKkB,MAAMoE,aAAetF,KAAKkB,MAAML,OAAQc,QAAS3B,KAAKkB,MAAMmE,WAAY3E,QAASV,KAAKkB,MAAMoE,eAI7H,IAAMkD,EAASxI,KAAKkB,MAAMqE,UACpBkD,EAAgBpH,EAAMC,OAAO,SAAAC,GAAI,MAAkB,OAAdA,EAAKJ,MAA+B,OAAdI,EAAKJ,OAIlEuE,EAAgB,GAElBA,EADC1F,KAAKkB,MAAMsD,SAASC,QACL,UAEbzE,KAAKkB,MAAMsD,SAASG,UACL,YAEA,OAIZ,IA+DIO,EAAgBlF,KAAKkB,MAAMgE,cACzC,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAEjBH,EAAAC,EAAAC,cAAA,MAAIG,QAASjC,KAAKiG,WAAlB,aAMCf,EAAcrE,QAChBe,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAemD,EAAcwD,YAA3C,MAA2DxD,EAAc1D,MACzEI,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWmD,EAAcrE,QAAnD,MAAqEqE,EAAcyD,wBACnF/G,EAAAC,EAAAC,cA/EqB,kBACvBF,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEC,QAASjH,EAAAC,EAAAC,cAAA,KAAGgH,KAAK,eAAe/G,UAAU,0CAA0Cd,MAAM,eAAjF,gBAA8GyE,EAA9G,KACTqD,GAAG,QACHC,SAAS,gBACTC,OAAK,EACLC,sBAAoB,GAEtBtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAEE2G,EAAcnG,IAAI,SAAAgC,GAAG,OACnB1C,EAAAC,EAAAC,cAAA,MAAIqH,aAAY7E,EAAInD,KAAMsB,IAAK6B,EAAInD,KAAMc,QAASqG,EAAKjE,YAAcC,EAAInD,KAAzE,MAAkFmD,EAAI9C,KAAtF,WAkEJ,MACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,KAAGgH,KAAK,eAAe/G,UAAU,eAAeoH,aAAW,OAAOlH,QAASjC,KAAK+E,cAAhF,QACEnD,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAW/B,KAAKkB,MAAMyC,SAAW3D,KAAKkB,MAAMyC,SAAW,iBAClF/B,EAAAC,EAAAC,cAAA,KAAGgH,KAAK,eAAe/G,UAAU,eAAeoH,aAAW,OAAOlH,QAAS,SAAAzB,GAAG,OAAI8H,EAAKvD,aAAavE,KAApG,UAMJoB,EAAAC,EAAAC,cAAA,WAASC,UAAW/B,KAAKkB,MAAMuE,iBAAkB2D,GAAG,gBACpDxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEbH,EAAAC,EAAAC,cAvEc,kBACdF,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEC,QAASjH,EAAAC,EAAAC,cAAA,KAAGgH,KAAK,eAAe7H,MAAM,SAASc,UAAU,gBAAhD,SACTgH,GAAG,QACHC,SAAS,gBACTC,OAAK,EACLC,sBAAoB,EACpBnH,UAAU,eAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAb,OACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UAGFyG,EAAOlG,IAAI,SAAA1B,GAAK,OAAIgB,EAAAC,EAAAC,cAAA,MAAKW,IAAK7B,EAAMC,OAAQI,MAAOL,EAAMC,OAAQkB,UAAU,WAAWE,QAASqG,EAAKpE,aAElGtC,EAAAC,EAAAC,cAAA,QAAMqH,aAAYvI,EAAMC,OAAQkB,UAAU,OAAOnB,EAAMC,QACvDe,EAAAC,EAAAC,cAAA,QAAMqH,aAAYvI,EAAMC,OAAQkB,UAAU,SAASnB,EAAM8H,aACzD9G,EAAAC,EAAAC,cAAA,QAAMqH,aAAYvI,EAAMC,OAAQkB,UAAU,SAASnB,EAAMG,sBAiD/D,MACAa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC9C/B,KAAKkB,MAAM4C,eAAiB,GAC3BlC,EAAAC,EAAAC,cAAA,KAAGuH,IAAK,SAACC,GAAUhB,EAAKiB,WAAaD,GAAQvH,UAAU,cAAc/B,KAAKkB,MAAM4C,eAAhF,MAGJlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAM,GAAb,gBACAJ,EAAAC,EAAAC,cAAA,SAAOc,KAAK,SACV3B,MAAOjB,KAAKkB,MAAMyC,SAClB6F,SAAU,SAAAhJ,GAAG,OAAG8H,EAAK/E,eAAe/C,IACpCiJ,UAAW,SAAAjJ,GAAG,OAAI8H,EAAK1E,eAAepD,IACtCkJ,YAAY,WACZL,IAAK,SAACM,GAAYrB,EAAKL,UAAY0B,GACnC5H,UAAU,aACV6H,QAAQ,WACRC,IAAI,IACJC,IAAK9J,KAAKkB,MAAMgE,cAAcnE,gBAE/Bf,KAAKkB,MAAMgE,cAAcwD,aACxB9G,EAAAC,EAAAC,cAAA,SAAOuH,IAAK,SAACC,GAAUhB,EAAKiB,WAAaD,GAAQvH,UAAU,cAA3D,MAA4E/B,KAAKkB,MAAMgE,cAAcnE,gBAGzGa,EAAAC,EAAAC,cAAA,KAAGgH,KAAK,eAAe7G,QAASjC,KAAKoF,cAAe2E,KAAK,SAAShI,UAAU,cAA5E,YAMJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZsG,GAGDrI,KAAKkB,MAAM6C,WACXnC,EAAAC,EAAAC,cAACkI,EAAD,cAljBU7G,IAAMC,WCtBJ6G,QACW,cAA7B/D,OAAOgE,SAASC,UAEe,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1I,EAAAC,EAAAC,cAACyI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtE,KAAK,SAAAuE,GACjCA,EAAaC","file":"static/js/main.c4b217a0.chunk.js","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\n//import Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\n/*import ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';*/\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n/*import { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';*/\n//import Modal from '@material-ui/core/Modal';\nimport Popup from \"reactjs-popup\";\nimport Langs from '../../assets/json/langs.json';\n//import IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n//import Slide from '@material-ui/core/Slide';\nimport './Listview.scss';\n\n//import Copier from '../../modules/Copier/Copier';\n\n  class Listview extends React.Component {\n    constructor(props) {\n      super(props);\n      console.log(this.props);\n      this.state = {\n      }\n    }\n    componentWillUnmount = () => {\n        console.log('asdf');\n        \n    }\n    onClickNavigate = (evt) => {\n      let curAyah = this.props.details.numberInSurah;\n      let surah = this.props.details.number;\n      let totAyah = this.props.details.numberOfAyahs;\n      \n      \n      switch(evt.target.value){\n        case \"Next\":\n          if(curAyah < totAyah){\n            curAyah++;\n          } else {\n            if(surah < 114){\n              surah++;\n              curAyah = 1;\n            } else {\n              console.log('You are on the last Ayah of the last Surah');\n            }\n          }\n          console.log(surah + ':' + curAyah);\n          //curAyah = this.props.details.numberOfAyahs\n          break;\n        case \"Prev\":\n          if(curAyah > 1){\n            curAyah--;\n          } else {\n            if(surah > 1){\n              surah--;\n            } else {\n              console.log('You are on the first Ayah of the first Surah');\n            }\n          }\n          console.log(surah + ':' + curAyah);\n          break;\n        default:\n          console.log('asd');\n          break;\n      }\n    }\n     getLangName(code) {\n            let lang = Langs.filter(item => item.code === code);\n            console.log(lang);\n            return (lang[0].name !== 'English' ? lang[0].name + ' | ' + lang[0].nativeName : lang[0].name);\n          }\n    render () {\n      //console.log(this.props);\n      const results = this.props.results;\n      const details = this.props.details;\n      \n      if(!this.props.results) return null;\n      \n      //console.log(details);\n      const PopupOnFocus =  () => (\n        <Popup\n          trigger={<button value=\"More Info\">More Info</button>}\n          on=\"click\"\n          position=\"right center\"\n          closeOnDocumentClick\n        >\n        <div><center>\n          <h2>{details.name}</h2>\n          <p>{details.englishName} | {details.englishNameTranslation}</p>\n           <p>Surah: {details.number} | Ayah: {details.numberInSurah}</p>\n           \n          </center>\n        </div>\n        </Popup>\n      )\n      \n      \n      /*<ListItemSecondaryAction>\n            <IconButton hidden edge=\"end\" aria-label=\"Comments\">\n              \n            </IconButton>\n          \n          </ListItemSecondaryAction>\n          <p>Ref: <span>{details.number}:{details.numberInSurah}</span></p>\n        \n        <PopupOnFocus />\n          */\n         \n    return (\n      <div className=\"listview-wrapper\">\n      <button hidden onClick={this.onClickNavigate} value=\"Prev\" >prev</button>\n      \n      \n        <button hidden onClick={this.onClickNavigate} value=\"Next\" >next</button>\n        <List component='ul' disablePadding={false} dense={false} className=\"verse-list-ul\">\n          {results.map((value, index) =>\n            <ListItem key={index} className=\"no-padding\">\n              <ListItemText className=\"verse-text\" >\n              { value.edition.type === 'translation' &&\n                <span className=\"ayah-details\">{this.getLangName(value.edition.language)}</span>\n              }\n\n              { value.edition.language === 'ar' && \n                    \n                      <audio controls=\"controls\" className=\"q-audio-player\">\n                        <source src={details.audio} type=\"audio/wav\" />\n                        Your browser does not support the <code>audio</code> element. \n                      </audio>\n                  \n                  }\n                <p className={value.edition.language === 'ar'? \"txt-arabic\" :''}>{value.text}</p>\n                  \n              </ListItemText>\n            </ListItem>\n            )\n          }\n          \n        </List>\n        \n      </div>\n    )\n    }\n\n  }  ;\n \nexport default Listview","import React from 'react';\nimport './Loader.scss';\n\n\nfunction Loader() {\n  //const greeting = 'Hello Function Component!';\n\n  return <div className=\"loader-wrapper\">\n    <p>Loading...</p>\n  </div>;\n}\n\nexport default Loader;","\nimport React from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\nimport 'typeface-roboto';\n//import TextField from '@material-ui/core/TextField';\n\n//import PropTypes from 'prop-types';\n//import { withStyles } from '@material-ui/core/styles';\n//import AppBar from '@material-ui/core/AppBar';\n//import Toolbar from '@material-ui/core/Toolbar';\n//import Popover from '@material-ui/core/Popover';\n\nimport Typography from '@material-ui/core/Typography';\n\n//import Button from '@material-ui/core/Button';\n//import Tabs from '@material-ui/core/Tabs';\n//import Tab from '@material-ui/core/Tab';\n\n//import FormGroup from '@material-ui/core/FormGroup';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\n//import Checkbox from '@material-ui/core/Checkbox';\n//import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n//import CheckBoxIcon from '@material-ui/icons/CheckBox';\n//import Favorite from '@material-ui/icons/Favorite';\n//import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport Listview from './components/Listview/Listview';\nimport Loader from './components/Loader/Loader';\nimport Langs from './assets/json/langs.json';\nimport Surahs from './assets/json/SurahList.json';\nimport Popup from \"reactjs-popup\";\n//import Checkbox from './components/Checkbox/Checkbox';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        mainResult: [],\n        inputVal: '',\n        ayahDetails: {},\n        rawData: {},\n        surahList: [],\n        searchError: '',\n        searchBlockClass: 'search-wrapper',\n        selectedSurah: {},\n        selSurahNumber: 0,\n        selectedTrans: '',\n        preloader: true,\n        chkTrans: {'english': false, 'malayalam' : false},\n        q_edition_ar: 'quran-simple-enhanced',\n        q_edition_trans: ['en.asad', 'en.pickthall', 'ml.abdulhameed'],\n        q_edition_audio: 'ar.alafasy'\n      }\n      //const langs = JSON.parse('./langs.json');\n      this.handleLoad = this.handleLoad.bind(this);\n      //this.chkSelectChange = this.chkSelectChange.bind(this);\n      this.resetView = this.resetView.bind(this);\n      this.searchForAyah = this.searchForAyah.bind(this);\n      \n    }\n    \n    resetView() {\n      //alert('asdf');\n      this.setState({\n        inputVal: '',\n        ayahDetails: null,\n        mainResult: [],\n        rawData: null,\n        searchError: '',\n        selectedSurah: {},\n        selSurahNumber: 0,\n        selectedTrans: '',\n        preloader: false,\n        chkTrans: {'english': false, 'malayalam' : false}\n      })\n    }\n    componentDidMount() {\n      window.addEventListener('load', this.handleLoad);\n    }\n    \n    \n    handleLoad(){\n      //console.log(Langs);\n      this.setState({\n         preloader: true\n      });\n      \n       this.setState({\n          surahList: Surahs.data,\n          preloader: false\n        });\n\n      /*fetch('https://api.alquran.cloud/v1/surah')\n      .then(res => res.json())\n      .then((data) => {\n        let sList = [];\n        sList = data.data.map(chapter => {\n          return chapter;\n        });\n        //this.surahList = sList;\n        this.setState({\n          surahList: Surahs.data,\n          preloader: false\n        });\n        //console.log(this.state.surahList);\n      })\n      .catch(\n        this.setState({\n          preloader: false,\n          searchError: this.getErrMessage('list')\n        })\n      ) */\n     \n    }\n    \n    searchForAyah_2() {\n      let filter = this.state.inputVal;\n      \n      \n\n      fetch('https://api.alquran.cloud/v1/ayah/' + filter + '/editions/quran-simple-enhanced,en.asad,en.pickthall,ml.abdulhameed,ar.alafasy')\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({\n            searchError:'',\n            rawData :data,\n            searchBlockClass:'search-wrapper shrink'\n          });\n          console.log(data);\n          this.processData(data);\n          \n        })\n        .catch(\n          this.setState({\n           preloader: false,\n           searchError: 'err'\n          })\n        )\n    }\n\n    validateInput(value){\n      //console.log(value);\n      //let selSurah = this.state.selectedSurah;\n      let errMsg = '';\n      let isValid = true;\n      let totAyahs;\n      console.log(value);\n      if(this.state.selectedSurah.number){\n        totAyahs = Number(this.state.selectedSurah.numberOfAyahs);\n      }\n      else {\n        totAyahs = 6236;\n      }\n      \n      if(value > totAyahs){\n        isValid = false;\n      }\n      console.log(value);\n      return isValid;\n    }\n\n    searchForAyah(event) {\n     \n      console.log(this.state.preloader);\n      let filter = Number(this.state.inputVal);\n      let q_editions = (this.state.q_edition_ar + ',' + this.state.q_edition_trans + ',' + this.state.q_edition_audio) ;\n      \n\n      let isRefValid = this.validateInput(filter);\n      //console.log(q_editions);\n      if(!filter || !isRefValid){\n        console.log(this.state.searchError);\n        this.setState({\n         preloader: false\n        });\n        return false;\n      }\n\n      if(String(filter).split(':').length <= 1){\n        if(this.state.selSurahNumber > 0){\n          filter = this.state.selSurahNumber + \":\" + filter;\n        } \n      } \n\n      /*\n      if((String(filter).split('-').length > 1) || (String(filter).split('e').length > 1) || (String(filter).split('E').length > 1)) {\n           this.setState({\n             preloader: false,\n             searchError: 'Invalid Ayah Number'\n            })\n        }\n        return false;\n        */\n      // WRITE ELSE CASES\n      this.setState({\n         preloader: true\n      }, () => \n\n        fetch('https://api.alquran.cloud/v1/ayah/' + filter + '/editions/' + q_editions)\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({\n              searchError:'',\n              rawData :data,\n              searchBlockClass:'search-wrapper shrink'\n            }, () => this.processData(data));\n          })\n          .catch(\n            this.setState({\n             preloader: false,\n             searchError: 'data error'\n            })\n          )\n      );\n    }\n    \n    getErrMessage(src) {\n      let message = '';\n      //let inp = this.state.inputVal;\n      let splitV = this.state.inputVal.split(':');\n      let curSurah = this.state.selectedSurah;\n      if(src === 'list'){\n        message = 'Surah list data error';\n      } else {\n        if(splitV.length > 1){\n          if(Number(splitV[0]) > 114 || Number(splitV[0]) < 1){\n            message = 'Invalid Surah reference';\n          } else {\n            if(curSurah && (Number(splitV[1]) < 1 || Number(splitV[1]) > Number(curSurah.numberOfAyahs))){\n              message = 'Invalid Ayah number. Enter Ayah 1 through ' + curSurah.numberOfAyahs;\n            } else {\n              message = ''\n            }\n          }\n        } else {\n          if(Number(splitV[0]) < 1 || Number(splitV[0]) > 60232){\n            message = 'Invalid Ayah number. Enter any from 1 to 60232';\n          } else {\n            message = '';\n          }\n        }\n      }\n      return message;\n      \n    }\n    \n     processData(result) {\n      let res = [];\n      let audio = '';\n      let details = null;\n      \n      this.setState({ \n        ayahDetails: {},\n        mainResult: []\n      });\n      \n      //console.log(this.state.chkTrans.english);\n      //console.log(this.state.chkTrans.malayalam);\n        result.data.map(item => {\n            let filteredItem = null;\n            var flag = true;\n            /* separate audio details */\n            if(!item.audio){\n              \n              filteredItem = {'edition': item.edition, 'text': item.text};\n              switch(item.edition.language){\n                case 'en':\n                  flag = this.state.chkTrans.english;\n                  break;\n                case 'ml':\n                  flag = this.state.chkTrans.malayalam;\n                  break;\n                default:\n                  flag = true;\n                  \n              }\n              if(flag){\n                res.push(filteredItem);\n              }\n              flag = true;\n            }\n            else{\n              if(audio === ''){\n                audio = item.audio;\n              }\n            }\n            \n            if(!details){\n\n              details = item.surah;\n              \n              details = Object.assign(details, {\n                'hizbQuarter': item.hizbQuarter,\n                'juz': item.juz,  \n                'manzil': item.manzil,\n                'ayahNumber': item.number,\n                'numberInSurah': item.numberInSurah,\n                'page': item.page,\n                'ruku': item.ruku,\n                'sajda': item.sajda\n              });\n            }\n            return true;\n          }\n        )\n        \n        if(audio){\n          details = Object.assign(details, {'audio': audio});\n        }\n        this.setState({ \n          ayahDetails: details, \n          mainResult: res, \n          preloader: false\n        });\n       \n        \n        return true;\n      \n    }\n    \n    updateInputVal = (evt) => {\n      let value = evt.target.value;\n      let isValid = this.validateInput(value);\n      console.log(evt.target.value);\n      if(isValid){\n        this.setState({\n          inputVal: evt.target.value\n        });\n      }\n    }\n    verifyInputKey = (evt) => {\n      if(evt.keyCode === 186) { // || evt.keyCode === 189){\n        this.setState({\n          selSurahNumber: evt.target.value,\n          inputVal: '', \n          preloader: true\n        },() => this.fetchSurahDetails(Number(this.state.selSurahNumber)));\n      }\n    }\n\n    selectSurah = (evt) => {\n      console.log(evt.target.value || evt.target.getAttribute('data-value'));\n      let dataVal = evt.target.value || evt.target.getAttribute('data-value');\n      this.setState({\n        preloader: true\n      }, () => this.fetchSurahDetails(Number(dataVal)));\n    }\n    fetchSurahDetails(dataVal){\n      let selSurah = [];\n      if(dataVal > 0){\n        selSurah = this.state.surahList.filter(surah => Number(surah.number) === Number(dataVal));\n        \n        this.setState({\n          selectedSurah: selSurah[0],\n          selSurahNumber: selSurah[0].number\n        }, () => {console.log(this.state.selectedSurah)});\n      }\n      \n      \n      this.setState({ \n        ayahDetails: {},\n        mainResult: [], \n        preloader: false\n      }, () => {this.ayahInput.focus()});\n      \n    }\n    \n    selectLang = evt => {\n      console.log(evt.target.getAttribute('data-value'));\n      \n      let lng = evt.target.getAttribute('data-value');\n      let eng = this.state.chkTrans.english;\n      let mal = this.state.chkTrans.malayalam;\n      switch (lng){\n        case 'en':\n          eng = true; //!eng;\n          mal = false;\n          break;\n        case 'ml':\n          mal = true; //!mal;\n          eng = false;\n          break;\n        default:\n      }\n      this.setState({\n        chkTrans:{\n          english: eng,\n          malayalam: mal\n        }\n      }, () => {\n        if(this.state.rawData && this.state.rawData.data){\n          this.processData(this.state.rawData);\n        }\n      });\n      \n    }\n    \n    \n\nfindLang(array, title) {\n//console.log('find');\n  \n      let result = array.filter(item => item.code === title );\n      if(result.length){\n        return result[0];\n      } else {\n        return false;\n      }\n}\n\nnavigateAyah = (evt) => {\n  //console.log(evt.target.getAttribute('data-value'));\n  let data = evt.target.getAttribute('data-value');\n  let valNow = Number(this.state.inputVal);\n  let totAyahs = Number(this.state.selectedSurah.numberOfAyahs); \n  switch (data){\n    case \"back\":  \n      if(valNow > 1) {\n        valNow--;\n      }    \n      break;\n    case \"next\":\n      if(valNow < totAyahs) {\n        valNow++;\n      }\n      break;\n    default:\n  }\n  this.setState({\n    inputVal: String(valNow)\n  }, () => this.searchForAyah(evt));\n  \n}\n  render(){\n    \n    /* <select id=\"surah-list\" onChange={evt => this.changeSurah(evt)} className=\"surah-select\">\n              <option value=\"0\" >--Select--</option>\n              { \n                surahs.map(el => <option value={el.number} key={el.number} > {el.number} - {el.englishName} </option>)\n              }\n            </select>\n            \n            <button className=\"toggle-btn\" value=\"malayalam\" onClick={this.chkSelectChange}>Mal</button>\n            */\n    let listview;\n\n    //console.log(this.langs);\n    if(this.state.mainResult.length){\n      listview = <Listview key={this.state.ayahDetails && this.state.number} results={this.state.mainResult} details={this.state.ayahDetails}/>\n    }\n    //console.log(this.findLang(Langs, 'ml'));\n    let surah = {};\n    const surahs = this.state.surahList;\n    const filteredLangs = Langs.filter(item => item.code === 'en' || item.code === 'ml' );\n    //const chapters = Surahs.data;\n    //console.log(chapters);\n    //console.log(langs);\n    let selectedTrans = '';\n    if(this.state.chkTrans.english){\n      selectedTrans = 'English';\n    } else {\n      if(this.state.chkTrans.malayalam){\n        selectedTrans = 'Malayalam';\n      } else {\n        selectedTrans = 'None';\n      }\n    }\n    \n            const LangPopup =  () => (\n        <Popup\n          trigger={<a href=\"javascript:;\" className=\"toggle-btn align-self-center margin top\" value=\"Translation\" >Translation: {selectedTrans} </a>}\n          on=\"click\"\n          position=\"center center\"\n          modal\n          closeOnDocumentClick\n        >\n        <div className=\"surah-wrapper\">\n          <h3>Select Language:</h3>\n          <ul>\n          {\n            filteredLangs.map(lng=> \n              <li data-value={lng.code} key={lng.code} onClick={this.selectLang} >{lng.code} - {lng.name} </li>\n            )\n          }\n          </ul>\n        </div>\n        </Popup>\n      )\n\n        \n      const SurahPopup =  () => (\n            <Popup\n              trigger={<a href=\"javascript:;\" value=\"Surahs\" className=\"surah-button\">Surah</a>}\n              on=\"click\"\n              position=\"center center\"\n              modal\n              closeOnDocumentClick\n              className=\"surah-popup\"\n            >\n            <div className=\"surah-wrapper\">\n              <h3>Select Surah:</h3>\n              <ul className=\"surah-list-ul\">\n                <li className=\"row-flex list-heads\">\n                  <p className=\"sno\" >No.</p>\n                  <p className=\"sname\">Surah Name</p>\n                  <p className=\"sayah\">Ayahs</p>\n                </li>\n              {\n                surahs.map(surah => <li  key={surah.number} value={surah.number} className=\"row-flex\" onClick={this.selectSurah}>\n                \n                  <span data-value={surah.number} className=\"sno\">{surah.number}</span>\n                  <span data-value={surah.number} className=\"sname\">{surah.englishName}</span>\n                  <span data-value={surah.number} className=\"sayah\">{surah.numberOfAyahs}</span>\n                \n                </li>)\n              }\n              </ul>\n            </div>\n            </Popup>\n         \n          )\n          \n          /*<label htmlFor=\"surah-list\">Surah:</label>\n          <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h1\" size=\"small\" color=\"inherit\">\n              Q-Search\n            </Typography>\n          </Toolbar>\n        </AppBar>\n          */\n          const selectedSurah = this.state.selectedSurah\n  return (\n    <div className=\"page-wrapper\">\n      <header className=\"App-header\">\n       \n       <h1 onClick={this.resetView}>\n              Q-Search\n            </h1>\n            \n      </header>\n      {\n        selectedSurah.number && \n      <section className=\"titles-wrapper\">\n        \n          <h2 className=\"surah-title\">{selectedSurah.englishName} | {selectedSurah.name}</h2>\n          <p>Surah: <span className=\"clearer\">{selectedSurah.number}</span> | {selectedSurah.englishNameTranslation}</p>\n          <LangPopup />\n          <div className=\"row-flex ayah-nav-wrapper margin top\">\n            <a href=\"javascript:;\" className=\"nav-btn back\" data-value=\"back\" onClick={this.navigateAyah}>Back</a>\n              <p>Ayah: <span className=\"clearer\">{this.state.inputVal ? this.state.inputVal : 'Not Selected'}</span></p>\n            <a href=\"javascript:;\" className=\"nav-btn next\" data-value=\"next\" onClick={evt => this.navigateAyah(evt)}>Next</a>\n           </div>\n      </section>\n  }\n      \n      \n        <section className={this.state.searchBlockClass} id=\"search-block\">\n        <div className=\"row-flex ayah-input-wrapper\" >\n          <div className=\"row-flex\">\n            \n            <SurahPopup />\n            <div className=\"triangle-right\"><div className=\"inner\"></div></div>\n            {this.state.selSurahNumber > 0 && \n              <p ref={(sur) => { this.surahLabel = sur; }} className=\"surah-name\">{this.state.selSurahNumber}:</p>\n            }\n          </div>\n          <div className=\"ayah-input\">\n            <label hidden>Ayah Number:</label>\n            <input type=\"number\"\n              value={this.state.inputVal}\n              onChange={evt =>this.updateInputVal(evt)}\n              onKeyDown={evt => this.verifyInputKey(evt)}\n              placeholder=\"Ayah No.\"\n              ref={(input) => { this.ayahInput = input; }} \n              className=\"input-ayah\"\n              pattern=\"^[0-9]*$\"\n              min=\"1\"\n              max={this.state.selectedSurah.numberOfAyahs}\n            />\n            {this.state.selectedSurah.englishName && \n              <label ref={(sur) => { this.surahLabel = sur; }} className=\"ayah-total\">of {this.state.selectedSurah.numberOfAyahs}</label>\n            }\n          </div>\n          <a href=\"javascript:;\" onClick={this.searchForAyah} role=\"button\" className=\"search-btn\">Search</a>\n          \n         </div> \n        \n          \n        </section>\n      <div className='content-wrapper'>\n        {listview}\n      </div>\n      \n      { this.state.preloader && \n        <Loader />\n      }\n      \n           \n    </div>\n    \n  );\n  }\n}\n//onChange={handleChange('checkedF')}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}